crystal_doc_search_index_callback({"repository_name":"interro","body":"# Interro\n\nPostgres database querying with Crystal\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     interro:\n       github: jgaskins/interro\n   ```\n\n2. Run `shards install`\n\n## Configuration\n\n```crystal\nrequire \"interro\"\nrequire \"db\"\n\nInterro.config do |c|\n  c.db = DB.open(ENV[\"DATABASE_URL\"])\n\n  # or if you're using using replication, you can specify separate DBs to read\n  # from and write to:\n  c.read_db = DB.open(ENV[\"DB_READ_URL\"])\n  c.write_db = DB.open(ENV[\"DB_WRITE_URL\"])\nend\n```\n\n## Migrations\n\nMigrations are, by convention, in the `./db/migrations` directory.\n\n### Generating a migration\n\nWhen you installed Interro into your application, it created a `bin/interro-migration` executable, so we can use that to generate our migration. Let's say we want to generate a migration to create our `users` table:\n\n```\nbin/interro-migration g CreateUsers\n```\n\nThis creates a directory called `db/migrations/YYYY_MM_DD_HH_MM_SS_NANOSECONDS-CreateUsers`. Inside this directory are two files called `up.sql` and `down.sql`. Respectively, these files represent the SQL queries needed to execute and roll-back the migration. Opening our `up.sql` file, we can edit it to say:\n\n```sql\nCREATE TABLE users(\n  id UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),\n  email TEXT UNIQUE NOT NULL,\n  name TEXT NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n)\n```\n\nand in our `down.sql` file:\n\n```sql\nDROP TABLE users\n```\n\n**Note:** You can only execute one statement per SQL file. Additional statements must be done inside a separate migration.\n\n### Executing the migration\n\nYour `CreateUsers` migration can be executed with the following command:\n\n```\nbin/interro-migration run CreateUsers\n```\n\nIf you want to execute _all_ migrations that have not yet been run (say, if you just pulled someone else's changes that contained a migration), you can simply omit the migration name. The default is to run all migrations.\n\n### Rolling back a migration\n\nYou can roll back a specific migration by executing the following command:\n\n```\nbin/interro-migration rollback CreateUsers\n```\n\n## Models\n\nOnce our table is created, we can create a model to represent that data inside the application. To do that, we create a `class` or `struct` with the desired name (for example, we might choose `User` to represent a row in the `users` table):\n\n```crystal\nstruct User\n  include DB::Serializable\n\n  getter id : UUID\n  getter name : String\n  getter email : String\n  getter created_at : Time\n  getter updated_at : Time\nend\n```\n\nThere are 3 things to note here:\n\n1. We `include DB::Serializable`. This mixin is provided by the `crystal-lang/crystal-db` shard to deserialize rows into objects. Interro does not require anything else of your models than that.\n2. Since we specified `NOT NULL` on all of the columns in our migration, we can avoid making any of the properties `nil`-able. If any of your columns do not have `NOT NULL` constraints, you should allow them to be `nil` here or you will not be able to deserialize those rows.\n3. Our model only specifies properties using `getter` and not `property`. This makes the models immutable.\n\n## Queries\n\nInterro supports 2 different concepts for queries:\n\n1. `Interro::QueryBuilder(T)` for generating SQL queries\n2. `Interro::Query` to allow you to write your own SQL queries\n\n### `QueryBuilder(T)`\n\nThe simplest way to get started is to write a `struct` that inherits from `Interro::QueryBuilder` for your model:\n\n```crystal\nstruct UserQuery < Interro::QueryBuilder(User)\n  table \"users\" # Send queries to the \"users\" table\nend\n```\n\nIf you're familiar with ActiveRecord in Ruby, you might be tempted to then run something like `UserQuery.where(foo: \"bar\")`, but Interro's query builder works a little differently. First, it must be instantiated.\n\n```crystal\nusers = UserQuery.new\n```\n\nThen, instead of using methods like `where` all over your application, you need to add methods to give names to those concepts. For example, if you want to find all the users in a given group:\n\n```crystal\nstruct UserQuery < Interro::QueryBuilder(User)\n  table \"users\"\n\n  def members_of(group : Group)\n    where(group_id: group.id)\n  end\nend\n```\n\nIf you're familiar with ActiveRecord, these are very similar to scopes. Interro requires you to put your queries behind these \"scope\" methods in order to insulate your application from your database structure. Methods like `where` are unavailable outside the class. This way, when your database structure changes, it isolates the code changes to the methods inside these classes.\n\nHere are a few methods provided by `Interro::QueryBuilder`:\n\n- `where(name: \"Jamie\")`\n- `where { |user| user.created_at < timestamp }`\n- `inner_join(\"groups\", as: \"g\", on: \"users.group_id = g.id\")`\n- `order_by(created_at: \"DESC\")`\n- `limit(25)`\n- `scalar(\"count(*)\", as: Int64)`\n- `insert(name: \"Jamie\", email: \"jamie@example.com\") : T`: returns the created record\n- `update(role: \"admin\") : T`: returns the updated models (allowing for immutable models)\n- `delete`\n\nEach one of these methods returns a new instance of the query builder. This lets you compose them in your query builder's methods and even makes your own methods composable. For example:\n\n```crystal\nstruct UserQuery < Interro::QueryBuilder(User)\n  table \"users\"\n\n  def with_id(id : UUID)\n    where(id: id).first\n  end\n\n  def registered_before(timestamp : Time)\n    where { |user| user.created_at < timestamp }\n  end\n\n  def oldest_first\n    order_by created_at: \"DESC\"\n  end\n\n  def in_group(group : Group)\n    where(group_id: group.id)\n  end\n\n  def in_group_with_name(group_name : String)\n    self # I don't like explicit `self` but it lines up the method chain nicely\n      .inner_join(\"groups\", as: \"g\", on: \"users.group_id = g.id\")\n      .where(\"g.name\": group_name)\n  end\n\n  def deactivate!(user : User) : User\n    update active: false\n  end\n\n  def at_most(count : Int32)\n    limit count\n  end\n\n  def count\n    scalar(\"count(*)\", as: Int64)\n  end\nend\n\nUserQuery.new\n  .in_group(group)\n  .oldest_first\n  .at_most(25)\n```\n\nThis query will get you the 25 oldest users (by registration date) in the specified group. The benefit here is that if we change the relationship between users and groups such that users can be a member of multiple groups, for example, this call doesn't need to change. You only need to change the internals of the query classes that know about that and you can keep the interfaces the exact same.\n\n#### Transactions\n\nYou can operate a transaction using the `Interro.transaction(&)` method and passing that transaction to your query objects. For example, to deactivate a group and all its users within the same transaction:\n\n```crystal\nInterro.transaction do |txn|\n  group = GroupQuery[txn].deactivate! id: group_id\n  UserQuery[txn]\n    .in_group(group)\n    .deactivate_all!\nend\n```\n\nIf an exception occurs within the transaction block, it will be rolled back, so it may be important not to overwrite any variables from outside the block until the block completes:\n\n```crystal\ngroup = GroupQuery.new.with_id(group_id)\n\nInterro.transaction do |txn|\n  group = GroupQuery[txn].deactivate!(id: group_id)\n  UserQuery[txn]\n    .in_group(group)\n    .deactivate_all!\n\n  # oops, connection to the database goes out!\nend\n\ngroup # This will be the deactivated one even if the transaction fails\n```\n\n### `Interro::Query`\n\nThe other way to create queries with Interro is to create entire query objects. These are structs that represent a single SQL query:\n\n```crystal\nstruct GetUserByID < Interro::Query\n  def call(id : UUID) : User?\n    read_one? <<-SQL, id, as: User\n      SELECT *\n      FROM users\n      WHERE id = $1\n      LIMIT 1\n    SQL\n  end\nend\n\nif user = GetUserByID[user_id]\n  # ...\nend\n```\n\nThe use case for these query objects are when a query is more complex than `Interro::QueryBuilder` can generate. For example, complex reporting queries, queries that return multiple entities per row, or any arbitrary SQL statement needed.\n\nMethods you can use within `Interro::Query` objects:\n\n- Run against the read DB:\n  - `read_one(query, *args, as: MyClass)`: asserts that one and only one row matches your query. If there are 0 or >1, an exception is raised.\n  - `read_one?(query, *args, as: MyClass)`: returns either the first matching row or `nil` if no rows match.\n  - `read_all(query, *args, as: MyClass) : Array(MyClass)`: returns all matching rows as an array\n- Run against the write DB:\n  - `write_one(query, *args, as: MyClass)`: asserts a single match, assumes a `RETURNING` clause\n  - `write(query, *args)`: runs the specified query and ignores any returned data\n\n#### Transactions\n\nTransactions are performed the same way as with `QueryBuilder`, by passing the transaction to the queries with the transaction in brackets:\n\n```crystal\nInterro.transaction do |txn|\n  user = GetUserByID[txn][user_id]\n  ChangeUserPassword[txn][new_password]\nend\n```\n\n## Development\n\n- Install Postgres\n  - macOS\n    - https://postgresapp.com/\n    - `brew install postgresql`\n  - Linux\n    - `apt-get install postgresql`\n    - Snap?\n- Make sure there is a default user and database (usually either `$USER` or `postgres` for both)\n- Run specs with `crystal spec`\n\n## Contributing\n\n1. Fork it (<https://github.com/jgaskins/interro/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Jamie Gaskins](https://github.com/jgaskins) - creator and maintainer\n","program":{"html_id":"interro/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"interro","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"interro/Interro","path":"Interro.html","kind":"module","full_name":"Interro","name":"Interro","abstract":false,"locations":[{"filename":"src/config.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L4"},{"filename":"src/dynamic_query.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L3"},{"filename":"src/interro.cr","line_number":12,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L12"},{"filename":"src/join_clause.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L1"},{"filename":"src/migration.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L4"},{"filename":"src/migrations.cr","line_number":6,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L6"},{"filename":"src/model.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/model.cr#L1"},{"filename":"src/query.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L3"},{"filename":"src/query_builder.cr","line_number":7,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L7"},{"filename":"src/query_expression.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L3"},{"filename":"src/query_record.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_record.cr#L3"},{"filename":"src/query_value.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L4"},{"filename":"src/types.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L3"},{"filename":"src/validations.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L1"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"CONFIG","name":"CONFIG","value":"Config.new"},{"id":"LOG","name":"LOG","value":"::Log.for(\"interro\")"},{"id":"VERSION","name":"VERSION","value":"\"0.3.3\""}],"doc":"","summary":"","class_methods":[{"html_id":"config(&)-class-method","name":"config","abstract":false,"location":{"filename":"src/config.cr","line_number":8,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L8"},"def":{"name":"config","yields":1,"block_arity":1,"visibility":"Public","body":"yield CONFIG\nCONFIG\n"},"external_var":false},{"html_id":"transaction(&:DB::Transaction->T)forallT-class-method","name":"transaction","abstract":false,"location":{"filename":"src/interro.cr","line_number":21,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L21"},"def":{"name":"transaction","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(DB::Transaction -> T)"},"visibility":"Public","body":"result = uninitialized T\ncompleted = false\nCONFIG.write_db.transaction do |txn|\n  result = yield txn\n  completed = true\nend\n\nif completed\n  result\nelse\n  raise(\"Transaction block is incomplete - unexpected rollback?\")\nend\n"},"external_var":false}],"types":[{"html_id":"interro/Interro/Any","path":"Interro/Any.html","kind":"struct","full_name":"Interro::Any","name":"Any","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/types.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L14"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(value:Array(self))-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(self)"}],"args_string":"(value : Array(self))","args_html":"(value : Array(<span class=\"k\">self</span>))","location":{"filename":"src/types.cr","line_number":23,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L23"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Array(self)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(value:Value)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Value"}],"args_string":"(value : Value)","args_html":"(value : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/types.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L14"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Value"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(values:Array)-class-method","name":"new","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array"}],"args_string":"(values : Array)","args_html":"(values : Array)","location":{"filename":"src/types.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L15"},"def":{"name":"new","args":[{"name":"values","external_name":"values","restriction":"Array"}],"visibility":"Public","body":"new(values.map do |value|\n  new(value)\nend)"},"external_var":false},{"html_id":"new(any:self)-class-method","name":"new","abstract":false,"args":[{"name":"any","external_name":"any","restriction":"self"}],"args_string":"(any : self)","args_html":"(any : <span class=\"k\">self</span>)","location":{"filename":"src/types.cr","line_number":19,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L19"},"def":{"name":"new","args":[{"name":"any","external_name":"any","restriction":"self"}],"visibility":"Public","body":"any"},"external_var":false}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/types.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L14"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@value.clone)"},"external_var":false},{"html_id":"copy_with(value_value=@value)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_value","default_value":"@value","external_name":"value","restriction":""}],"args_string":"(value _value = @value)","args_html":"(value _value = @value)","location":{"filename":"src/types.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L14"},"def":{"name":"copy_with","args":[{"name":"_value","default_value":"@value","external_name":"value","restriction":""}],"visibility":"Public","body":"self.class.new(_value)"},"external_var":false},{"html_id":"inspect(io)-instance-method","name":"inspect","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/types.cr","line_number":30,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L30"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"value.inspect(io)"},"external_var":false},{"html_id":"to_s(io)-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/types.cr","line_number":26,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L26"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"value.to_s(io)"},"external_var":false},{"html_id":"value:Value-instance-method","name":"value","abstract":false,"def":{"name":"value","return_type":"Value","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"interro/Interro/Config","path":"Interro/Config.html","kind":"class","full_name":"Interro::Config","name":"Config","abstract":false,"superclass":{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config.cr","line_number":13,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L13"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"instance_methods":[{"html_id":"db=(db)-instance-method","name":"db=","abstract":false,"args":[{"name":"db","external_name":"db","restriction":""}],"args_string":"(db)","args_html":"(db)","location":{"filename":"src/config.cr","line_number":18,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L18"},"def":{"name":"db=","args":[{"name":"db","external_name":"db","restriction":""}],"visibility":"Public","body":"self.read_db = db\nself.write_db = db\n"},"external_var":false},{"html_id":"log:Log-instance-method","name":"log","abstract":false,"location":{"filename":"src/config.cr","line_number":16,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L16"},"def":{"name":"log","visibility":"Public","body":"@log"},"external_var":false},{"html_id":"log=(log:Log)-instance-method","name":"log=","abstract":false,"args":[{"name":"log","external_name":"log","restriction":"::Log"}],"args_string":"(log : Log)","args_html":"(log : Log)","location":{"filename":"src/config.cr","line_number":16,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L16"},"def":{"name":"log=","args":[{"name":"log","external_name":"log","restriction":"::Log"}],"visibility":"Public","body":"@log = log"},"external_var":false},{"html_id":"read_db:DB::Database-instance-method","name":"read_db","abstract":false,"location":{"filename":"src/config.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L14"},"def":{"name":"read_db","return_type":"DB::Database","visibility":"Public","body":"if (__temp_145 = @read_db).nil?\n  ::raise(::NilAssertionError.new(\"Interro::Config#read_db cannot be nil\"))\nelse\n  __temp_145\nend"},"external_var":false},{"html_id":"read_db=(read_db:DB::Database)-instance-method","name":"read_db=","abstract":false,"args":[{"name":"read_db","external_name":"read_db","restriction":"DB::Database"}],"args_string":"(read_db : DB::Database)","args_html":"(read_db : DB::Database)","location":{"filename":"src/config.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L14"},"def":{"name":"read_db=","args":[{"name":"read_db","external_name":"read_db","restriction":"DB::Database"}],"visibility":"Public","body":"@read_db = read_db"},"external_var":false},{"html_id":"read_db?:DB::Database|Nil-instance-method","name":"read_db?","abstract":false,"location":{"filename":"src/config.cr","line_number":14,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L14"},"def":{"name":"read_db?","return_type":"DB::Database | ::Nil","visibility":"Public","body":"@read_db"},"external_var":false},{"html_id":"write_db:DB::Database-instance-method","name":"write_db","abstract":false,"location":{"filename":"src/config.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L15"},"def":{"name":"write_db","return_type":"DB::Database","visibility":"Public","body":"if (__temp_146 = @write_db).nil?\n  ::raise(::NilAssertionError.new(\"Interro::Config#write_db cannot be nil\"))\nelse\n  __temp_146\nend"},"external_var":false},{"html_id":"write_db=(write_db:DB::Database)-instance-method","name":"write_db=","abstract":false,"args":[{"name":"write_db","external_name":"write_db","restriction":"DB::Database"}],"args_string":"(write_db : DB::Database)","args_html":"(write_db : DB::Database)","location":{"filename":"src/config.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L15"},"def":{"name":"write_db=","args":[{"name":"write_db","external_name":"write_db","restriction":"DB::Database"}],"visibility":"Public","body":"@write_db = write_db"},"external_var":false},{"html_id":"write_db?:DB::Database|Nil-instance-method","name":"write_db?","abstract":false,"location":{"filename":"src/config.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/config.cr#L15"},"def":{"name":"write_db?","return_type":"DB::Database | ::Nil","visibility":"Public","body":"@write_db"},"external_var":false}]},{"html_id":"interro/Interro/ConflictHandler","path":"Interro/ConflictHandler.html","kind":"struct","full_name":"Interro::ConflictHandler(UpdateHandler)","name":"ConflictHandler","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":76,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L76"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(columns:String,doaction:Interro::DoNothing|Interro::Update(UpdateHandler))-class-method","name":"new","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":"String"},{"name":"action","external_name":"do","restriction":"::Interro::DoNothing | ::Interro::Update(UpdateHandler)"}],"args_string":"(columns : String, do action : Interro::DoNothing | Interro::Update(UpdateHandler))","args_html":"(columns : String, do action : <a href=\"../Interro/DoNothing.html\">Interro::DoNothing</a> | <a href=\"../Interro/Update.html\">Interro::Update</a>(UpdateHandler))","location":{"filename":"src/interro.cr","line_number":79,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L79"},"def":{"name":"new","args":[{"name":"columns","external_name":"columns","restriction":"String"},{"name":"action","external_name":"do","restriction":"::Interro::DoNothing | ::Interro::Update(UpdateHandler)"}],"visibility":"Public","body":"_ = ConflictHandler(UpdateHandler).allocate\n_.initialize(columns, action)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"action:Update(UpdateHandler)|DoNothing-instance-method","name":"action","abstract":false,"location":{"filename":"src/interro.cr","line_number":77,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L77"},"def":{"name":"action","return_type":"Update(UpdateHandler) | DoNothing","visibility":"Public","body":"@action"},"external_var":false},{"html_id":"to_sql(io,start_atinitial_index:Int):Nil-instance-method","name":"to_sql","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":"Int"}],"args_string":"(io, start_at initial_index : Int) : Nil","args_html":"(io, start_at initial_index : Int) : Nil","location":{"filename":"src/interro.cr","line_number":82,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L82"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":"Int"}],"return_type":"Nil","visibility":"Public","body":"((io << \"ON CONFLICT (\") << @columns) << \") DO \"\naction.to_sql(io, start_at: initial_index)\n"},"external_var":false}],"types":[{"html_id":"interro/Interro/ConflictHandler/Action","path":"Interro/ConflictHandler/Action.html","kind":"module","full_name":"Interro::ConflictHandler::Action","name":"Action","abstract":false,"locations":[{"filename":"src/interro.cr","line_number":87,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L87"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"interro/Interro/DoNothing","kind":"struct","full_name":"Interro::DoNothing","name":"DoNothing"},{"html_id":"interro/Interro/Update","kind":"struct","full_name":"Interro::Update(T)","name":"Update"}],"namespace":{"html_id":"interro/Interro/ConflictHandler","kind":"struct","full_name":"Interro::ConflictHandler(UpdateHandler)","name":"ConflictHandler"},"instance_methods":[{"html_id":"params-instance-method","name":"params","abstract":true,"location":{"filename":"src/interro.cr","line_number":89,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L89"},"def":{"name":"params","visibility":"Public","body":""},"external_var":false},{"html_id":"to_sql(io,start_atinitial_index):Nil-instance-method","name":"to_sql","abstract":true,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":""}],"args_string":"(io, start_at initial_index) : Nil","args_html":"(io, start_at initial_index) : Nil","location":{"filename":"src/interro.cr","line_number":88,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L88"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":""}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false}]}]},{"html_id":"interro/Interro/DoNothing","path":"Interro/DoNothing.html","kind":"struct","full_name":"Interro::DoNothing","name":"DoNothing","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Interro/ConflictHandler/Action","kind":"module","full_name":"Interro::ConflictHandler::Action","name":"Action"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":112,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L112"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/Interro/ConflictHandler/Action","kind":"module","full_name":"Interro::ConflictHandler::Action","name":"Action"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/interro.cr","line_number":112,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L112"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/interro.cr","line_number":112,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L112"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false},{"html_id":"params-instance-method","name":"params","abstract":false,"location":{"filename":"src/interro.cr","line_number":115,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L115"},"def":{"name":"params","visibility":"Public","body":""},"external_var":false},{"html_id":"to_sql(io,start_at):Nil-instance-method","name":"to_sql","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"start_at","external_name":"start_at","restriction":""}],"args_string":"(io, start_at) : Nil","args_html":"(io, start_at) : Nil","location":{"filename":"src/interro.cr","line_number":118,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L118"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""},{"name":"start_at","external_name":"start_at","restriction":""}],"return_type":"Nil","visibility":"Public","body":"io << \"NOTHING\""},"external_var":false}]},{"html_id":"interro/Interro/DynamicQuery","path":"Interro/DynamicQuery.html","kind":"struct","full_name":"Interro::DynamicQuery(T, U)","name":"DynamicQuery","abstract":false,"superclass":{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder","name":"QueryBuilder"},"ancestors":[{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder","name":"QueryBuilder"},{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},{"html_id":"interro/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynamic_query.cr","line_number":37,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L37"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(selectselect_columns:String,distinct,fromsql_table_name:String,joinjoin_clause,wherewhere_clause,order_byorder_by_clause,offsetoffset_clause,limitlimit_clause,args,transaction,delegate:U)-class-method","name":"new","abstract":false,"args":[{"name":"select_columns","external_name":"select","restriction":"::String"},{"name":"distinct","external_name":"distinct","restriction":""},{"name":"sql_table_name","external_name":"from","restriction":"::String"},{"name":"join_clause","external_name":"join","restriction":""},{"name":"where_clause","external_name":"where","restriction":""},{"name":"order_by_clause","external_name":"order_by","restriction":""},{"name":"offset_clause","external_name":"offset","restriction":""},{"name":"limit_clause","external_name":"limit","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"transaction","external_name":"transaction","restriction":""},{"name":"delegate","external_name":"delegate","restriction":"U"}],"args_string":"(select select_columns : String, distinct, from sql_table_name : String, join join_clause, where where_clause, order_by order_by_clause, offset offset_clause, limit limit_clause, args, transaction, delegate : U)","args_html":"(select select_columns : String, distinct, from sql_table_name : String, join join_clause, where where_clause, order_by order_by_clause, offset offset_clause, limit limit_clause, args, transaction, delegate : U)","location":{"filename":"src/dynamic_query.cr","line_number":41,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L41"},"def":{"name":"new","args":[{"name":"select_columns","external_name":"select","restriction":"::String"},{"name":"distinct","external_name":"distinct","restriction":""},{"name":"sql_table_name","external_name":"from","restriction":"::String"},{"name":"join_clause","external_name":"join","restriction":""},{"name":"where_clause","external_name":"where","restriction":""},{"name":"order_by_clause","external_name":"order_by","restriction":""},{"name":"offset_clause","external_name":"offset","restriction":""},{"name":"limit_clause","external_name":"limit","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"transaction","external_name":"transaction","restriction":""},{"name":"delegate","external_name":"delegate","restriction":"U"}],"visibility":"Public","body":"_ = DynamicQuery(T, U).allocate\n_.initialize(select_columns, distinct, sql_table_name, join_clause, where_clause, order_by_clause, offset_clause, limit_clause, args, transaction, delegate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"model_table_mappings(*args,**options)-instance-method","name":"model_table_mappings","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/dynamic_query.cr","line_number":56,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L56"},"def":{"name":"model_table_mappings","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@delegate.model_table_mappings(*args, **options)"},"external_var":false},{"html_id":"model_table_mappings(*args,**options,&)-instance-method","name":"model_table_mappings","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/dynamic_query.cr","line_number":56,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L56"},"def":{"name":"model_table_mappings","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@delegate.model_table_mappings(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"sql_table_alias(*args,**options)-instance-method","name":"sql_table_alias","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/dynamic_query.cr","line_number":56,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L56"},"def":{"name":"sql_table_alias","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@delegate.sql_table_alias(*args, **options)"},"external_var":false},{"html_id":"sql_table_alias(*args,**options,&)-instance-method","name":"sql_table_alias","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/dynamic_query.cr","line_number":56,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L56"},"def":{"name":"sql_table_alias","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@delegate.sql_table_alias(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"sql_table_name:String-instance-method","name":"sql_table_name","abstract":false,"location":{"filename":"src/dynamic_query.cr","line_number":39,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L39"},"def":{"name":"sql_table_name","return_type":"String","visibility":"Public","body":"@sql_table_name"},"external_var":false}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/dynamic_query.cr","line_number":68,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L68"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      @delegate.distinct = @distinct\n      @delegate.join_clause = @join_clause\n      @delegate.where_clause = @where_clause\n      @delegate.order_by_clause = @order_by_clause\n      @delegate.offset_clause = @offset_clause\n      @delegate.limit_clause = @limit_clause\n      @delegate.args = @args\n      @delegate.transaction = @transaction\n      \n%new_query\n = @delegate.\n{{ call }}\n\n      case \n%new_query\n\n      when U\n        \n{{ @type.id }}\n.new(\n          @select_columns,\n          @distinct,\n          from: sql_table_name,\n          join: \n%new_query\n.join_clause,\n          where: \n%new_query\n.where_clause,\n          order_by: \n%new_query\n.order_by_clause,\n          offset: \n%new_query\n.offset_clause,\n          limit: \n%new_query\n.limit_clause,\n          args: \n%new_query\n.args,\n          transaction: \n%new_query\n.transaction,\n          delegate: @delegate,\n        )\n      \nelse\n        \n%new_query\n\n      \nend\n    \n"}}]},{"html_id":"interro/Interro/Error","path":"Interro/Error.html","kind":"class","full_name":"Interro::Error","name":"Error","abstract":false,"superclass":{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L15"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"interro/Interro/UnexpectedEmptyResultSet","kind":"class","full_name":"Interro::UnexpectedEmptyResultSet","name":"UnexpectedEmptyResultSet"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/Exception","path":"Interro/Exception.html","kind":"class","full_name":"Interro::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":212,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L212"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"interro/Interro/NotFound","kind":"class","full_name":"Interro::NotFound","name":"NotFound"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/Field","path":"Interro/Field.html","kind":"annotation","full_name":"Interro::Field","name":"Field","abstract":false,"locations":[{"filename":"src/model.cr","line_number":2,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/model.cr#L2"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/JoinClause","path":"Interro/JoinClause.html","kind":"struct","full_name":"Interro::JoinClause","name":"JoinClause","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/join_clause.cr","line_number":2,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L2"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(other_table:String,asrelation:Nil|String,oncondition:String,join_type:String=\"INNER\")-class-method","name":"new","doc":"Represent a SQL JOIN with the given arguments.\n\n```\nJoinClause.new(\"my_table\", as: \"m\", on: \"m.foo_id = foo.id\")\n```","summary":"<p>Represent a SQL JOIN with the given arguments.</p>","abstract":false,"args":[{"name":"other_table","external_name":"other_table","restriction":"::String"},{"name":"relation","external_name":"as","restriction":"::Nil | ::String"},{"name":"condition","external_name":"on","restriction":"::String"},{"name":"join_type","default_value":"\"INNER\"","external_name":"join_type","restriction":"::String"}],"args_string":"(other_table : String, as relation : Nil | String, on condition : String, join_type : String = \"INNER\")","args_html":"(other_table : String, as relation : Nil | String, on condition : String, join_type : String = <span class=\"s\">&quot;INNER&quot;</span>)","location":{"filename":"src/join_clause.cr","line_number":13,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L13"},"def":{"name":"new","args":[{"name":"other_table","external_name":"other_table","restriction":"::String"},{"name":"relation","external_name":"as","restriction":"::Nil | ::String"},{"name":"condition","external_name":"on","restriction":"::String"},{"name":"join_type","default_value":"\"INNER\"","external_name":"join_type","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(other_table, relation, condition, join_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"condition:String-instance-method","name":"condition","abstract":false,"location":{"filename":"src/join_clause.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L5"},"def":{"name":"condition","return_type":"String","visibility":"Public","body":"@condition"},"external_var":false},{"html_id":"join_type:String-instance-method","name":"join_type","abstract":false,"location":{"filename":"src/join_clause.cr","line_number":6,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L6"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":"@join_type"},"external_var":false},{"html_id":"other_table:String-instance-method","name":"other_table","abstract":false,"location":{"filename":"src/join_clause.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L3"},"def":{"name":"other_table","return_type":"String","visibility":"Public","body":"@other_table"},"external_var":false},{"html_id":"relation:String|Nil-instance-method","name":"relation","abstract":false,"location":{"filename":"src/join_clause.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L4"},"def":{"name":"relation","return_type":"String | ::Nil","visibility":"Public","body":"@relation"},"external_var":false},{"html_id":"to_sql(io)-instance-method","name":"to_sql","doc":"Output this JOIN clause to the given `IO` as SQL.","summary":"<p>Output this JOIN clause to the given <code>IO</code> as SQL.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/join_clause.cr","line_number":17,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/join_clause.cr#L17"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"((io << ' ') << @join_type) << \" JOIN \"\nother_table.inspect(io)\nif relation\n  io << \" AS \"\n  relation.inspect(io)\nend\n((io << \" ON \") << condition) << ' '\n"},"external_var":false}]},{"html_id":"interro/Interro/Migration","path":"Interro/Migration.html","kind":"class","full_name":"Interro::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/migration.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L5"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ENV_MATCH","name":"ENV_MATCH","value":"/\\$(\\w+)/"},{"id":"QueryLog","name":"QueryLog","value":"::Log.for(\"sql\")"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(name:String,added_at:Time,up:String,down:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"added_at","external_name":"added_at","restriction":"Time"},{"name":"up","external_name":"up","restriction":"String"},{"name":"down","external_name":"down","restriction":"String"}],"args_string":"(name : String, added_at : Time, up : String, down : String)","args_html":"(name : String, added_at : Time, up : String, down : String)","location":{"filename":"src/migration.cr","line_number":16,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L16"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"added_at","external_name":"added_at","restriction":"Time"},{"name":"up","external_name":"up","restriction":"String"},{"name":"down","external_name":"down","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, added_at, up, down)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name:String,added_at:Time)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"added_at","external_name":"added_at","restriction":"Time"}],"args_string":"(name : String, added_at : Time)","args_html":"(name : String, added_at : Time)","location":{"filename":"src/migration.cr","line_number":13,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L13"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"added_at","external_name":"added_at","restriction":"Time"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, added_at)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"added_at:Time-instance-method","name":"added_at","abstract":false,"location":{"filename":"src/migration.cr","line_number":9,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L9"},"def":{"name":"added_at","visibility":"Public","body":"@added_at"},"external_var":false},{"html_id":"down(env=ENV)-instance-method","name":"down","abstract":false,"args":[{"name":"env","default_value":"ENV","external_name":"env","restriction":""}],"args_string":"(env = ENV)","args_html":"(env = <span class=\"t\">ENV</span>)","location":{"filename":"src/migration.cr","line_number":31,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L31"},"def":{"name":"down","args":[{"name":"env","default_value":"ENV","external_name":"env","restriction":""}],"visibility":"Public","body":"execute(down_sql(env))"},"external_var":false},{"html_id":"down=(down:String)-instance-method","name":"down=","abstract":false,"args":[{"name":"down","external_name":"down","restriction":"::String"}],"args_string":"(down : String)","args_html":"(down : String)","location":{"filename":"src/migration.cr","line_number":11,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L11"},"def":{"name":"down=","args":[{"name":"down","external_name":"down","restriction":"::String"}],"visibility":"Public","body":"@down = down"},"external_var":false},{"html_id":"down_sql(env)-instance-method","name":"down_sql","abstract":false,"args":[{"name":"env","external_name":"env","restriction":""}],"args_string":"(env)","args_html":"(env)","location":{"filename":"src/migration.cr","line_number":39,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L39"},"def":{"name":"down_sql","args":[{"name":"env","external_name":"env","restriction":""}],"visibility":"Public","body":"@down.gsub(ENV_MATCH) do |match|\n  env.fetch($~[1], match)\nend"},"external_var":false},{"html_id":"execute(sql:String,*args,**kwargs)-instance-method","name":"execute","abstract":false,"args":[{"name":"sql","external_name":"sql","restriction":"String"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(sql : String, *args, **kwargs)","args_html":"(sql : String, *args, **kwargs)","location":{"filename":"src/migration.cr","line_number":19,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L19"},"def":{"name":"execute","args":[{"name":"sql","external_name":"sql","restriction":"String"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":1,"visibility":"Public","body":"QueryLog.info do\n  sql\nend\nmeasurement = Benchmark.measure do\n  CONFIG.write_db.using_connection() do |__arg0|\n    (__arg0.as(PG::Connection)).exec_all(sql, *args, **kwargs)\n  end\nend\nQueryLog.info do\n  \"-- #{measurement.real.humanize}s\"\nend\n"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/migration.cr","line_number":9,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L9"},"def":{"name":"name","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"up(env=ENV)-instance-method","name":"up","abstract":false,"args":[{"name":"env","default_value":"ENV","external_name":"env","restriction":""}],"args_string":"(env = ENV)","args_html":"(env = <span class=\"t\">ENV</span>)","location":{"filename":"src/migration.cr","line_number":27,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L27"},"def":{"name":"up","args":[{"name":"env","default_value":"ENV","external_name":"env","restriction":""}],"visibility":"Public","body":"execute(up_sql(env))"},"external_var":false},{"html_id":"up=(up:String)-instance-method","name":"up=","abstract":false,"args":[{"name":"up","external_name":"up","restriction":"::String"}],"args_string":"(up : String)","args_html":"(up : String)","location":{"filename":"src/migration.cr","line_number":10,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L10"},"def":{"name":"up=","args":[{"name":"up","external_name":"up","restriction":"::String"}],"visibility":"Public","body":"@up = up"},"external_var":false},{"html_id":"up_sql(env)-instance-method","name":"up_sql","abstract":false,"args":[{"name":"env","external_name":"env","restriction":""}],"args_string":"(env)","args_html":"(env)","location":{"filename":"src/migration.cr","line_number":35,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migration.cr#L35"},"def":{"name":"up_sql","args":[{"name":"env","external_name":"env","restriction":""}],"visibility":"Public","body":"@up.gsub(ENV_MATCH) do |match|\n  env.fetch($~[1], match)\nend"},"external_var":false}]},{"html_id":"interro/Interro/Migrations","path":"Interro/Migrations.html","kind":"module","full_name":"Interro::Migrations","name":"Migrations","abstract":false,"locations":[{"filename":"src/migrations.cr","line_number":7,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L7"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ALL_MIGRATIONS","name":"ALL_MIGRATIONS","value":"Dir[\"db/migrations/**/*.sql\"].map do |path|\n  filename = File.basename(File.dirname(path))\n  timestamp, name = filename.split(\"-\")\n  time = Time.parse_utc(timestamp, \"%Y_%m_%d_%H_%M_%S_%9N\")\n  migration = (  __temp_193 = name\n  __temp_194 = NAME_MAP\n  __temp_194[__temp_193]? || (__temp_194[__temp_193] = Migration.new(name, time))\n)\n\n  if path.ends_with?(\"up.sql\")\n    migration.up = File.read(path)\n  else\n    if path.ends_with?(\"down.sql\")\n      migration.down = File.read(path)\n    else\n      raise(\"Migration files must be named up.sql or down.sql\")\n    end\n  end\n\n  SchemaMigration.new(name, time)\nend.uniq"},{"id":"MigrationLog","name":"MigrationLog","value":"::Log.for(\"migrations\", level: :info)"},{"id":"NAME_MAP","name":"NAME_MAP","value":"{} of String => Migration"},{"id":"TIME_FORMAT","name":"TIME_FORMAT","value":"Time::Format::ISO_8601_DATE_TIME"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"class_methods":[{"html_id":"call(args:Array(String))-class-method","name":"call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : Array(String))","location":{"filename":"src/migrations.cr","line_number":53,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L53"},"def":{"name":"call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"operation = -> do\nend\n\nOptionParser.parse(args.dup) do |parser|\n  selected_migration = nil\n  parser.on(\"-n NAME\", \"--name=NAME\", \"Specify a migration name to perform the operation on (not the filename)\") do |name|\n    selected_migration = ALL_MIGRATIONS.find do |m|\n      m.name == name\n    end\n  end\n\n  parser.on(\"rollback\", \"Rollback the specified migration (default: latest)\") do\n    operation = -> do\n      rollback(selected_migration)\n    end\n  end\n\n  parser.on(\"redo\", \"Redo (rollback+run) the specified migration (default: latest)\") do\n    operation = -> do\n      redo(selected_migration)\n    end\n  end\n\n  parser.on(\"run\", \"Run the specified migration (default: all incomplete)\") do\n    operation = -> do\n      run(selected_migration)\n    end\n  end\n\n  parser.on(\"g\", \"Generate a migration with the specified name\") do\n    name = \"\"\n    parser.unknown_args do |args|\n      name = args.first\n    end\n    operation = -> do\n      SQLGenerator.call(name)\n    end\n  end\nend\n\noperation.call\n"},"external_var":false},{"html_id":"completed_migrations-class-method","name":"completed_migrations","abstract":false,"location":{"filename":"src/migrations.cr","line_number":140,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L140"},"def":{"name":"completed_migrations","visibility":"Public","body":"CONFIG.write_db.query_all(\"  SELECT name, added_at\\n  FROM schema_migrations\\n  ORDER BY added_at\", as: SchemaMigration)"},"external_var":false},{"html_id":"ensure_migration_table_exists-class-method","name":"ensure_migration_table_exists","abstract":false,"location":{"filename":"src/migrations.cr","line_number":148,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L148"},"def":{"name":"ensure_migration_table_exists","visibility":"Public","body":"CONFIG.write_db.exec(\"  CREATE TABLE IF NOT EXISTS schema_migrations (\\n    name TEXT UNIQUE NOT NULL,\\n    added_at TIMESTAMPTZ UNIQUE NOT NULL\\n  )\")"},"external_var":false},{"html_id":"redo(migration:Nil)-class-method","name":"redo","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"args_string":"(migration : Nil)","args_html":"(migration : Nil)","location":{"filename":"src/migrations.cr","line_number":129,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L129"},"def":{"name":"redo","args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"visibility":"Public","body":"if migration = rollback(nil)\n  run(migration)\nend"},"external_var":false},{"html_id":"redo(migration:SchemaMigration)-class-method","name":"redo","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"args_string":"(migration : SchemaMigration)","args_html":"(migration : <a href=\"../Interro/Migrations/SchemaMigration.html\">SchemaMigration</a>)","location":{"filename":"src/migrations.cr","line_number":135,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L135"},"def":{"name":"redo","args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"visibility":"Public","body":"rollback(migration)\nrun(migration)\n"},"external_var":false},{"html_id":"rollback(migration:Nil)-class-method","name":"rollback","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"args_string":"(migration : Nil)","args_html":"(migration : Nil)","location":{"filename":"src/migrations.cr","line_number":105,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L105"},"def":{"name":"rollback","args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"visibility":"Public","body":"if migration = completed_migrations.last?\n  rollback(migration)\nelse\n  MigrationLog.warn do\n    \"No migration to roll back\"\n  end\n  nil\nend"},"external_var":false},{"html_id":"rollback(migration:SchemaMigration)-class-method","name":"rollback","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"args_string":"(migration : SchemaMigration)","args_html":"(migration : <a href=\"../Interro/Migrations/SchemaMigration.html\">SchemaMigration</a>)","location":{"filename":"src/migrations.cr","line_number":114,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L114"},"def":{"name":"rollback","args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"visibility":"Public","body":"ensure_migration_table_exists\nMigrationLog.info do\n  \"Rolling back #{migration.name}\"\nend\nmeasurement = Benchmark.measure do\n  NAME_MAP[migration.name].down\n  CONFIG.write_db.exec(\"  DELETE FROM schema_migrations\\n  WHERE name = $1\\n  AND added_at = $2\", migration.name, migration.added_at)\nend\nMigrationLog.info do\n  \"#{migration.name}: #{measurement.real.humanize}s\"\nend\nmigration\n"},"external_var":false},{"html_id":"run(migration:Nil)-class-method","name":"run","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"args_string":"(migration : Nil)","args_html":"(migration : Nil)","location":{"filename":"src/migrations.cr","line_number":84,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L84"},"def":{"name":"run","args":[{"name":"migration","external_name":"migration","restriction":"Nil"}],"visibility":"Public","body":"ensure_migration_table_exists\nall_migrations = ALL_MIGRATIONS.sort_by(&.added_at)\n\n(all_migrations - completed_migrations).each do |migration|\n  run(migration)\nend\n"},"external_var":false},{"html_id":"run(migration:SchemaMigration)-class-method","name":"run","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"args_string":"(migration : SchemaMigration)","args_html":"(migration : <a href=\"../Interro/Migrations/SchemaMigration.html\">SchemaMigration</a>)","location":{"filename":"src/migrations.cr","line_number":93,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L93"},"def":{"name":"run","args":[{"name":"migration","external_name":"migration","restriction":"SchemaMigration"}],"visibility":"Public","body":"MigrationLog.info do\n  \"Running #{migration.name}\"\nend\nmeasurement = Benchmark.measure do\n  NAME_MAP[migration.name].up\n  CONFIG.write_db.exec(\"  INSERT INTO schema_migrations (name, added_at)\\n  VALUES ($1, $2)\", migration.name, migration.added_at)\nend\nMigrationLog.info do\n  \"#{migration.name}: #{measurement.real.humanize}s (#{measurement.total.humanize}s CPU)\"\nend\n"},"external_var":false}],"types":[{"html_id":"interro/Interro/Migrations/SchemaMigration","path":"Interro/Migrations/SchemaMigration.html","kind":"struct","full_name":"Interro::Migrations::SchemaMigration","name":"SchemaMigration","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"interro/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/migrations.cr","line_number":184,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L184"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"interro/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"}],"namespace":{"html_id":"interro/Interro/Migrations","kind":"module","full_name":"Interro::Migrations","name":"Migrations"},"class_methods":[{"html_id":"from_rs(rs:DB::ResultSet)-class-method","name":"from_rs","abstract":false,"args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/migrations.cr","line_number":185,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L185"},"def":{"name":"from_rs","args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"visibility":"Public","body":"begin\n  objs = Array(self).new\n  rs.each do\n    objs << (self.new(rs))\n  end\n  objs\nensure\n  rs.close\nend"},"external_var":false}],"constructors":[{"html_id":"new(name:String,added_at:Time)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"added_at","external_name":"added_at","restriction":"::Time"}],"args_string":"(name : String, added_at : Time)","args_html":"(name : String, added_at : Time)","location":{"filename":"src/migrations.cr","line_number":190,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L190"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"added_at","external_name":"added_at","restriction":"::Time"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, added_at)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(rs:DB::ResultSet)-class-method","name":"new","abstract":false,"args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/migrations.cr","line_number":185,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L185"},"def":{"name":"new","args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"visibility":"Public","body":"instance = allocate\ninstance.initialize(__set_for_db_serializable: rs)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"},"external_var":false}],"instance_methods":[{"html_id":"added_at:Time-instance-method","name":"added_at","abstract":false,"location":{"filename":"src/migrations.cr","line_number":188,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L188"},"def":{"name":"added_at","return_type":"Time","visibility":"Public","body":"@added_at"},"external_var":false},{"html_id":"added_at=(added_at:Time)-instance-method","name":"added_at=","abstract":false,"args":[{"name":"added_at","external_name":"added_at","restriction":"Time"}],"args_string":"(added_at : Time)","args_html":"(added_at : Time)","location":{"filename":"src/migrations.cr","line_number":188,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L188"},"def":{"name":"added_at=","args":[{"name":"added_at","external_name":"added_at","restriction":"Time"}],"visibility":"Public","body":"@added_at = added_at"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/migrations.cr","line_number":187,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L187"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/migrations.cr","line_number":187,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L187"},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"},"external_var":false}]},{"html_id":"interro/Interro/Migrations/SQLGenerator","path":"Interro/Migrations/SQLGenerator.html","kind":"class","full_name":"Interro::Migrations::SQLGenerator","name":"SQLGenerator","abstract":false,"superclass":{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/migrations.cr","line_number":157,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L157"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/Migrations","kind":"module","full_name":"Interro::Migrations","name":"Migrations"},"class_methods":[{"html_id":"call(*args,**kwargs)-class-method","name":"call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/migrations.cr","line_number":158,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L158"},"def":{"name":"call","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"visibility":"Public","body":"new.call(*args, **kwargs)"},"external_var":false}],"instance_methods":[{"html_id":"call(name:String)-instance-method","name":"call","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/migrations.cr","line_number":162,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/migrations.cr#L162"},"def":{"name":"call","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"puts(\"Generating #{name}...\")\ndir = \"db/migrations/#{Time.utc.to_s(\"%Y_%m_%d_%H_%M_%S_%9N\")}-#{name}\"\nDir.mkdir_p(dir)\nFile.write(\"#{dir}/up.sql\", \"CREATE TABLE foo(\\n  id UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),\\n  -- other attributes can go here\\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\\n)\\n\\n-- or\\n\\nCREATE INDEX CONCURRENTLY index_foo_on_bar\\nON foo (bar)\")\n\nFile.write(\"#{dir}/down.sql\", \"DROP TABLE foo\")\n"},"external_var":false}]}]},{"html_id":"interro/Interro/Model","path":"Interro/Model.html","kind":"module","full_name":"Interro::Model","name":"Model","abstract":false,"ancestors":[{"html_id":"interro/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"}],"locations":[{"filename":"src/model.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/model.cr#L5"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(*,__set_for_db_serializablers:DB::ResultSet)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"rs","external_name":"__set_for_db_serializable","restriction":"::DB::ResultSet"}],"args_string":"(*, __set_for_db_serializable rs : DB::ResultSet)","args_html":"(*, __set_for_db_serializable rs : DB::ResultSet)","location":{"filename":"src/model.cr","line_number":39,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/model.cr#L39"},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"rs","external_name":"__set_for_db_serializable","restriction":"::DB::ResultSet"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__set_for_db_serializable: rs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"types":[{"html_id":"interro/Interro/Model/NonStrict","path":"Interro/Model/NonStrict.html","kind":"module","full_name":"Interro::Model::NonStrict","name":"NonStrict","abstract":false,"locations":[{"filename":"src/model.cr","line_number":114,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/model.cr#L114"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/Model","kind":"module","full_name":"Interro::Model","name":"Model"}}]},{"html_id":"interro/Interro/NotFound","path":"Interro/NotFound.html","kind":"class","full_name":"Interro::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"interro/Interro/Exception","kind":"class","full_name":"Interro::Exception","name":"Exception"},"ancestors":[{"html_id":"interro/Interro/Exception","kind":"class","full_name":"Interro::Exception","name":"Exception"},{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":215,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L215"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/OrderBy","path":"Interro/OrderBy.html","kind":"alias","full_name":"Interro::OrderBy","name":"OrderBy","abstract":false,"locations":[{"filename":"src/query_builder.cr","line_number":8,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L8"}],"repository_name":"interro","program":false,"enum":false,"alias":true,"aliased":"Hash(String, String)","aliased_html":"Hash(String, String)","const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/Query","path":"Interro/Query.html","kind":"struct","full_name":"Interro::Query","name":"Query","abstract":true,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L4"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"class_methods":[{"html_id":"[](transaction:DB::Transaction)-class-method","name":"[]","abstract":false,"args":[{"name":"transaction","external_name":"transaction","restriction":"::DB::Transaction"}],"args_string":"(transaction : DB::Transaction)","args_html":"(transaction : DB::Transaction)","location":{"filename":"src/query.cr","line_number":24,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L24"},"def":{"name":"[]","args":[{"name":"transaction","external_name":"transaction","restriction":"::DB::Transaction"}],"visibility":"Public","body":"new(read_db: transaction.connection, write_db: transaction.connection)"},"external_var":false},{"html_id":"[](*args,**kwargs)-class-method","name":"[]","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/query.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L5"},"def":{"name":"[]","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"visibility":"Public","body":"new.call(*args, **kwargs)"},"external_var":false},{"html_id":"[]?(*args,**kwargs)-class-method","name":"[]?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/query.cr","line_number":9,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L9"},"def":{"name":"[]?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"visibility":"Public","body":"new.call?(*args, **kwargs)"},"external_var":false},{"html_id":"call(*args,**kwargs)-class-method","name":"call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/query.cr","line_number":13,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L13"},"def":{"name":"call","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"visibility":"Public","body":"new.call(*args, **kwargs)"},"external_var":false}],"constructors":[{"html_id":"new(query_builder:Interro::QueryBuilder)-class-method","name":"new","abstract":false,"args":[{"name":"query_builder","external_name":"query_builder","restriction":"Interro::QueryBuilder"}],"args_string":"(query_builder : Interro::QueryBuilder)","args_html":"(query_builder : <a href=\"../Interro/QueryBuilder.html\">Interro::QueryBuilder</a>)","location":{"filename":"src/query.cr","line_number":28,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L28"},"def":{"name":"new","args":[{"name":"query_builder","external_name":"query_builder","restriction":"Interro::QueryBuilder"}],"visibility":"Public","body":"if txn = query_builder.transaction\n  new(read_db: txn.connection, write_db: txn.connection)\nelse\n  new\nend"},"external_var":false},{"html_id":"new(read_db:DB::Connection|DB::Database=CONFIG.read_db,write_db:DB::Connection|DB::Database=CONFIG.write_db)-class-method","name":"new","abstract":false,"args":[{"name":"read_db","default_value":"CONFIG.read_db","external_name":"read_db","restriction":"::DB::Connection | ::DB::Database"},{"name":"write_db","default_value":"CONFIG.write_db","external_name":"write_db","restriction":"::DB::Connection | ::DB::Database"}],"args_string":"(read_db : DB::Connection | DB::Database = CONFIG.read_db, write_db : DB::Connection | DB::Database = CONFIG.write_db)","args_html":"(read_db : DB::Connection | DB::Database = <span class=\"t\">CONFIG</span>.read_db, write_db : DB::Connection | DB::Database = <span class=\"t\">CONFIG</span>.write_db)","location":{"filename":"src/query.cr","line_number":39,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L39"},"def":{"name":"new","args":[{"name":"read_db","default_value":"CONFIG.read_db","external_name":"read_db","restriction":"::DB::Connection | ::DB::Database"},{"name":"write_db","default_value":"CONFIG.write_db","external_name":"write_db","restriction":"::DB::Connection | ::DB::Database"}],"visibility":"Public","body":"_ = allocate\n_.initialize(read_db, write_db)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"[](*args,**kwargs)-instance-method","name":"[]","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/query.cr","line_number":17,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query.cr#L17"},"def":{"name":"[]","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"visibility":"Public","body":"call(*args, **kwargs)"},"external_var":false}]},{"html_id":"interro/Interro/QueryBuilder","path":"Interro/QueryBuilder.html","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder","abstract":true,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},{"html_id":"interro/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynamic_query.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/dynamic_query.cr#L4"},{"filename":"src/query_builder.cr","line_number":104,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L104"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},{"html_id":"interro/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"subclasses":[{"html_id":"interro/Interro/DynamicQuery","kind":"struct","full_name":"Interro::DynamicQuery(T, U)","name":"DynamicQuery"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"doc":"Defining `QueryBuilder` objects is a way to create composable queries. For\nexample, if you have the following `Model` and `QueryBuilder`:\n\n```\nstruct User\n  include Interro::Model\n\n  getter id : UUID\n  getter name : String\n  getter email : String\n  getter team_id : UUID?\n  getter role : Role\n\n  enum Role\n    Member\n    TeamAdmin\n    SiteAdmin\n  end\nend\n\nstruct UserQuery < Interro::QueryBuilder(User)\n  table \"users\"\n\n  def find(id : UUID)\n    where(id: id).first?\n  end\n\n  def on_team(team : Team)\n    where team_id: team.id\n  end\n\n  def with_role(role : User::Role)\n    # We pass `role.value` to the SQL query since it's stored in `INTEGER`\n    # column type.\n    where role: role.value\n  end\n\n  def sorted_by_name(direction : Interro::QueryBuilder::OrderByDirection = :asc)\n    order_by name: direction\n  end\nend\n```\n\nThen you can find all team admins like this:\n\n```\nusers = UserQuery.new\n  .on_team(team)\n  .with_role(:team_admin)\n  .sorted_by_name\n```\n\nYou can insert records with the `insert` method:\n\n```\nstruct UserQuery < Interro::QueryBuilder(User)\n  # ...\n  def create(name : String, email : String, team : Team, role : User::Role)\n    # This generates the following SQL:\n    #   INSERT INTO users (name, email, team_id, role) VALUES ($1, $2, $3, $4)\n    # And it passes these args to the parameterized query:\n    #   [name, email, team.id, role.value]\n    insert(\n      name: name,\n      email: email,\n      team_id: team.id,\n      role: role.value,\n    )\n  end\nend\n```\n\nYou can also use `Interro::Validations::Result` objects to validate the\ninputs before saving them to the DB. Since `Interro::QueryBuilder` includes\nthe `Interro::Validations` mixin, you can simply refer to it as `Result`.\n\n```\nstruct UserQuery < Interro::QueryBuilder(User)\n  # ...\n  def create(name : String, email : String, team : Team, role : User::Role)\n    Result(User).new\n      .validate_presence(name: name, email: email)\n      .validate_uniqueness(\"email\") { where(email: email).any? }\n      .valid do\n        insert(\n          name: name,\n          email: email,\n          team_id: team.id,\n          role: role.value,\n        )\n      end\n  end\nend\n```","summary":"<p>Defining <code><a href=\"../Interro/QueryBuilder.html\">QueryBuilder</a></code> objects is a way to create composable queries.</p>","constructors":[{"html_id":"[](transaction:DB::Transaction):self-class-method","name":"[]","abstract":false,"args":[{"name":"transaction","external_name":"transaction","restriction":"::DB::Transaction"}],"args_string":"(transaction : DB::Transaction) : self","args_html":"(transaction : DB::Transaction) : <span class=\"k\">self</span>","location":{"filename":"src/query_builder.cr","line_number":157,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L157"},"def":{"name":"[]","args":[{"name":"transaction","external_name":"transaction","restriction":"::DB::Transaction"}],"return_type":"self","visibility":"Public","body":"new.with_transaction(transaction)"},"external_var":false},{"html_id":"new(transaction_owner:Interro::QueryBuilder)-class-method","name":"new","abstract":false,"args":[{"name":"transaction_owner","external_name":"transaction_owner","restriction":"::Interro::QueryBuilder"}],"args_string":"(transaction_owner : Interro::QueryBuilder)","args_html":"(transaction_owner : <a href=\"../Interro/QueryBuilder.html\">Interro::QueryBuilder</a>)","location":{"filename":"src/query_builder.cr","line_number":161,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L161"},"def":{"name":"new","args":[{"name":"transaction_owner","external_name":"transaction_owner","restriction":"::Interro::QueryBuilder"}],"visibility":"Public","body":"if txn = transaction_owner.transaction\n  self[txn]\nelse\n  new\nend"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":104,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L104"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"&(other:self):CompoundQuery-instance-method","name":"&","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : CompoundQuery","args_html":"(other : <span class=\"k\">self</span>) : <a href=\"../Interro/QueryBuilder/CompoundQuery.html\">CompoundQuery</a>","location":{"filename":"src/query_builder.cr","line_number":254,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L254"},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"CompoundQuery","visibility":"Public","body":"CompoundQuery.new(self, \"INTERSECTION\", other, connection(CONFIG.read_db))"},"external_var":false},{"html_id":"-(other:self):CompoundQuery-instance-method","name":"-","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : CompoundQuery","args_html":"(other : <span class=\"k\">self</span>) : <a href=\"../Interro/QueryBuilder/CompoundQuery.html\">CompoundQuery</a>","location":{"filename":"src/query_builder.cr","line_number":258,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L258"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"CompoundQuery","visibility":"Public","body":"CompoundQuery.new(self, \"EXCEPT\", other, connection(CONFIG.read_db))"},"external_var":false},{"html_id":"|(other:self):CompoundQuery-instance-method","name":"|","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : CompoundQuery","args_html":"(other : <span class=\"k\">self</span>) : <a href=\"../Interro/QueryBuilder/CompoundQuery.html\">CompoundQuery</a>","location":{"filename":"src/query_builder.cr","line_number":250,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L250"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"CompoundQuery","visibility":"Public","body":"CompoundQuery.new(self, \"UNION\", other, connection(CONFIG.read_db))"},"external_var":false},{"html_id":"any?:Bool-instance-method","name":"any?","doc":"Returns `true` if at least one of the collection's members is truthy.\n\n```\n[nil, true, 99].any? # => true\n[nil, false].any?    # => false\n([] of Int32).any?   # => false\n```\n\n* `#present?` does not consider truthiness of elements.\n* `#any?(&)` and `#any(pattern)` allow custom conditions.\n\nNOTE: `#any?` usually has the same semantics as `#present?`. They only\ndiffer if the element type can be falsey (i.e. `T <= Nil || T <= Pointer || T <= Bool`).\nIt's typically advised to prefer `#present?` unless these specific truthiness\nsemantics are required.","summary":"<p>Returns <code>true</code> if at least one of the collection's members is truthy.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":503,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L503"},"def":{"name":"any?","return_type":"Bool","visibility":"Public","body":"!none?"},"external_var":false},{"html_id":"count:Int64-instance-method","name":"count","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":262,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L262"},"def":{"name":"count","return_type":"Int64","visibility":"Public","body":"scalar(\"count(*)\", as: Int64)"},"external_var":false},{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":193,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L193"},"def":{"name":"each","visibility":"Public","body":"ResultSetIterator(T).new(db: connection(CONFIG.read_db), query: to_sql, args: @args)"},"external_var":false},{"html_id":"each(&:T->)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":201,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L201"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(T ->)"},"visibility":"Public","body":"args = @args\nif offset = offset_clause\n  args = args + ([offset] of Interro::Value)\nend\nif limit = limit_clause\n  args = args + ([limit] of Interro::Value)\nend\n\n(connection(Interro::CONFIG.read_db)).query_each(to_sql, args: args) do |rs|\n  {% if true %}\n          {% if T < Tuple %}\n            yield({ {% for type, index in T.type_vars %} rs.read({{ type }}) {% if index < (T.type_vars.size - 1) %},{% end %} {% end %} })\n          {% else %}\n            yield rs.read(T)\n          {% end %}\n        {% end %}\nend\n"},"external_var":false},{"html_id":"first(count:Int)-instance-method","name":"first","doc":"Returns an `Array` with the first *count* elements in the collection.\n\nIf *count* is bigger than the number of elements in the collection,\nreturns as many as possible. This include the case of calling it over\nan empty collection, in which case it returns an empty array.","summary":"<p>Returns an <code>Array</code> with the first <em>count</em> elements in the collection.</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":"Int"}],"args_string":"(count : Int)","args_html":"(count : Int)","location":{"filename":"src/query_builder.cr","line_number":184,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L184"},"def":{"name":"first","args":[{"name":"count","external_name":"count","restriction":"Int"}],"visibility":"Public","body":"limit(count)"},"external_var":false},{"html_id":"first-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.\n\n```\n([1, 2, 3]).first   # => 1\n([] of Int32).first # raises Enumerable::EmptyError\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":180,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L180"},"def":{"name":"first","visibility":"Public","body":"first? || (raise(UnexpectedEmptyResultSet.new(\"#{self} returned no results\")))"},"external_var":false},{"html_id":"first?-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.\n\n```\n([1, 2, 3]).first?   # => 1\n([] of Int32).first? # => nil\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":188,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L188"},"def":{"name":"first?","visibility":"Public","body":"(limit(1)).each do |obj|\n  return obj\nend\nnil\n"},"external_var":false},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":104,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L104"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false},{"html_id":"merge(other:QueryBuilder):self-instance-method","name":"merge","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"QueryBuilder"}],"args_string":"(other : QueryBuilder) : self","args_html":"(other : <a href=\"../Interro/QueryBuilder.html\">QueryBuilder</a>) : <span class=\"k\">self</span>","location":{"filename":"src/query_builder.cr","line_number":221,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L221"},"def":{"name":"merge","args":[{"name":"other","external_name":"other","restriction":"QueryBuilder"}],"return_type":"self","visibility":"Public","body":"new = dup\nnew.join_clause = new.join_clause + other.join_clause\nif (my_where = new.where_clause) && (their_where = other.where_clause)\n  new.where_clause = my_where & their_where\nelse\n  new.where_clause || (new.where_clause = other.where_clause)\nend\nnew.args = new.args + other.args\nif (my_order = new.order_by_clause) && (their_order = other.order_by_clause)\n  new.order_by_clause = my_order.merge(their_order)\nelse\n  new.order_by_clause || (new.order_by_clause = other.order_by_clause)\nend\nnew\n"},"external_var":false},{"html_id":"none?:Bool-instance-method","name":"none?","doc":"Returns `true` if all of the elements of the collection are falsey.\n\n```\n[nil, false].none?       # => true\n[nil, false, true].none? # => false\n```\n\nIt's the opposite of `all?`.","summary":"<p>Returns <code>true</code> if all of the elements of the collection are falsey.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":507,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L507"},"def":{"name":"none?","return_type":"Bool","visibility":"Public","body":"sql = String.build do |str|\n  str << \"SELECT 1 AS one\"\n  (str << \" FROM \") << sql_table_name\n\n  if join = join_clause\n    join.each(&.to_sql(str))\n  end\n\n  if where = where_clause\n    (str << \" WHERE \") << where.to_sql\n  end\n\n  str << \" LIMIT 1\"\nend\n\n!((connection(CONFIG.read_db)).query_one?(sql, args: @args, as: Int32))\n"},"external_var":false},{"html_id":"to_json(json:JSON::Builder):Nil-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder) : Nil","args_html":"(json : JSON::Builder) : Nil","location":{"filename":"src/query_builder.cr","line_number":238,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L238"},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"return_type":"Nil","visibility":"Public","body":"json.array do\n  each(&.to_json(json))\nend"},"external_var":false},{"html_id":"to_sql:String-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":244,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L244"},"def":{"name":"to_sql","return_type":"String","visibility":"Public","body":"String.build do |str|\n  to_sql(str)\nend"},"external_var":false}],"macros":[{"html_id":"from(name,*joins)-macro","name":"from","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"joins","external_name":"joins","restriction":""}],"args_string":"(name, *joins)","args_html":"(name, *joins)","location":{"filename":"src/query_builder.cr","line_number":123,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L123"},"def":{"name":"from","args":[{"name":"name","external_name":"name","restriction":""},{"name":"joins","external_name":"joins","restriction":""}],"splat_index":1,"visibility":"Public","body":"      def sql_table_name\n        \n{{ name }}\n\n      \nend\n\n      def sql_table_alias\n        sql_table_name\n      \nend\n\n      def model_table_mappings\n        \n{\n          \n{% for type_var, index in T.type_vars %}\n            {% if index == 0 %}\n              {{ type_var }} => {{ name }},\n            {% else %}\n              {% args = joins[index - 1].named_args %}\n\n              {{ type_var }} => {{ (args.find do |arg|\n  arg.name == \"as\".id\nend || args.first).value }},\n            {% end %}\n          {% end %}\n\n        }\n      \nend\n\n      def self.new\n        super\n          \n{% for join in joins %}\n            .{{ join }}\n          {% end %}\n\n      \nend\n    \n"}},{"html_id":"table(name,astable_alias=nil)-macro","name":"table","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"table_alias","default_value":"nil","external_name":"as","restriction":""}],"args_string":"(name, as table_alias = nil)","args_html":"(name, as table_alias = <span class=\"n\">nil</span>)","location":{"filename":"src/query_builder.cr","line_number":109,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L109"},"def":{"name":"table","args":[{"name":"name","external_name":"name","restriction":""},{"name":"table_alias","default_value":"nil","external_name":"as","restriction":""}],"visibility":"Public","body":"      def sql_table_name\n        \n{{ name }}\n\n      \nend\n\n      def sql_table_alias\n        \n{{ table_alias || name }}\n\n      \nend\n\n      def model_table_mappings\n        \n{ T => \n{{ name }}\n }\n      \nend\n    \n"}}],"types":[{"html_id":"interro/Interro/QueryBuilder/CompoundQuery","path":"Interro/QueryBuilder/CompoundQuery.html","kind":"struct","full_name":"Interro::QueryBuilder::CompoundQuery(T)","name":"CompoundQuery","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_builder.cr","line_number":811,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L811"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder"},"constructors":[{"html_id":"new(lhs:QueryBuilder(T),combinator:String,rhs:QueryBuilder(T),connection:DB::Database|DB::Connection)-class-method","name":"new","abstract":false,"args":[{"name":"lhs","external_name":"lhs","restriction":"QueryBuilder(T)"},{"name":"combinator","external_name":"combinator","restriction":"String"},{"name":"rhs","external_name":"rhs","restriction":"QueryBuilder(T)"},{"name":"connection","external_name":"connection","restriction":"::DB::Database | ::DB::Connection"}],"args_string":"(lhs : QueryBuilder(T), combinator : String, rhs : QueryBuilder(T), connection : DB::Database | DB::Connection)","args_html":"(lhs : <a href=\"../../Interro/QueryBuilder.html\">QueryBuilder</a>(T), combinator : String, rhs : <a href=\"../../Interro/QueryBuilder.html\">QueryBuilder</a>(T), connection : DB::Database | DB::Connection)","location":{"filename":"src/query_builder.cr","line_number":816,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L816"},"def":{"name":"new","args":[{"name":"lhs","external_name":"lhs","restriction":"QueryBuilder(T)"},{"name":"combinator","external_name":"combinator","restriction":"String"},{"name":"rhs","external_name":"rhs","restriction":"QueryBuilder(T)"},{"name":"connection","external_name":"connection","restriction":"::DB::Database | ::DB::Connection"}],"visibility":"Public","body":"_ = CompoundQuery(T).allocate\n_.initialize(lhs, combinator, rhs, connection)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"each(&:T->)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":824,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L824"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(T ->)"},"visibility":"Public","body":"args = @lhs.args + @rhs.args\nif limit\n  args << (Any.new(limit))\nend\n\n@connection.query_each(to_sql, args: args) do |rs|\n  yield T.new(rs)\nend\n"},"external_var":false},{"html_id":"first(count:Int)-instance-method","name":"first","doc":"Returns an `Array` with the first *count* elements in the collection.\n\nIf *count* is bigger than the number of elements in the collection,\nreturns as many as possible. This include the case of calling it over\nan empty collection, in which case it returns an empty array.","summary":"<p>Returns an <code>Array</code> with the first <em>count</em> elements in the collection.</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":"Int"}],"args_string":"(count : Int)","args_html":"(count : Int)","location":{"filename":"src/query_builder.cr","line_number":835,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L835"},"def":{"name":"first","args":[{"name":"count","external_name":"count","restriction":"Int"}],"visibility":"Public","body":"new = dup\nnew.limit = count\nnew\n"},"external_var":false},{"html_id":"to_sql-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":841,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L841"},"def":{"name":"to_sql","visibility":"Public","body":"lhs = @lhs.to_sql\nlhs_arg_count = (@lhs.@args).size\nrhs = @rhs.to_sql.gsub(/\\$(\\d+)/) do |match|\n  \"$#{match[1].to_i + lhs_arg_count}\"\nend\n\narg_count = lhs_arg_count + (@rhs.@args).size\n\nString.build do |str|\n  str << lhs\n  ((str << ' ') << @combinator) << ' '\n  str << rhs\n  if @limit\n    (str << \"LIMIT $\") << (arg_count = arg_count + 1)\n  end\nend\n"},"external_var":false}]},{"html_id":"interro/Interro/QueryBuilder/InnerJoin","path":"Interro/QueryBuilder/InnerJoin.html","kind":"struct","full_name":"Interro::QueryBuilder::InnerJoin","name":"InnerJoin","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_builder.cr","line_number":154,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L154"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":154,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L154"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":154,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L154"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false}]},{"html_id":"interro/Interro/QueryBuilder/OrderByDirection","path":"Interro/QueryBuilder/OrderByDirection.html","kind":"enum","full_name":"Interro::QueryBuilder::OrderByDirection","name":"OrderByDirection","abstract":false,"ancestors":[{"html_id":"interro/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"interro/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_builder.cr","line_number":402,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L402"}],"repository_name":"interro","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"ASC","name":"ASC","value":"0"},{"id":"DESC","name":"DESC","value":"1"},{"id":"ASC_NULLS_FIRST","name":"ASC_NULLS_FIRST","value":"2"},{"id":"ASC_NULLS_LAST","name":"ASC_NULLS_LAST","value":"3"},{"id":"DESC_NULLS_FIRST","name":"DESC_NULLS_FIRST","value":"4"},{"id":"DESC_NULLS_LAST","name":"DESC_NULLS_LAST","value":"5"}],"namespace":{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder"},"instance_methods":[{"html_id":"asc?-instance-method","name":"asc?","doc":"Returns `true` if this enum value equals `ASC`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#ASC\">ASC</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":403,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L403"},"def":{"name":"asc?","visibility":"Public","body":"self == ASC"},"external_var":false},{"html_id":"asc_nulls_first?-instance-method","name":"asc_nulls_first?","doc":"Returns `true` if this enum value equals `ASC_NULLS_FIRST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#ASC_NULLS_FIRST\">ASC_NULLS_FIRST</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":405,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L405"},"def":{"name":"asc_nulls_first?","visibility":"Public","body":"self == ASC_NULLS_FIRST"},"external_var":false},{"html_id":"asc_nulls_last?-instance-method","name":"asc_nulls_last?","doc":"Returns `true` if this enum value equals `ASC_NULLS_LAST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#ASC_NULLS_LAST\">ASC_NULLS_LAST</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":406,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L406"},"def":{"name":"asc_nulls_last?","visibility":"Public","body":"self == ASC_NULLS_LAST"},"external_var":false},{"html_id":"desc?-instance-method","name":"desc?","doc":"Returns `true` if this enum value equals `DESC`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#DESC\">DESC</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":404,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L404"},"def":{"name":"desc?","visibility":"Public","body":"self == DESC"},"external_var":false},{"html_id":"desc_nulls_first?-instance-method","name":"desc_nulls_first?","doc":"Returns `true` if this enum value equals `DESC_NULLS_FIRST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#DESC_NULLS_FIRST\">DESC_NULLS_FIRST</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":407,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L407"},"def":{"name":"desc_nulls_first?","visibility":"Public","body":"self == DESC_NULLS_FIRST"},"external_var":false},{"html_id":"desc_nulls_last?-instance-method","name":"desc_nulls_last?","doc":"Returns `true` if this enum value equals `DESC_NULLS_LAST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Interro/QueryBuilder/OrderByDirection.html#DESC_NULLS_LAST\">DESC_NULLS_LAST</a></code></p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":408,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L408"},"def":{"name":"desc_nulls_last?","visibility":"Public","body":"self == DESC_NULLS_LAST"},"external_var":false},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code>String</code> representation of this enum member.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":410,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L410"},"def":{"name":"to_s","visibility":"Public","body":"{% for member in @type.constants %}\n          if value == {{ @type.constant(member) }}\n            return {{ member.stringify.tr(\"_\", \" \") }}\n          end\n\n          value.to_s\n        {% end %}"},"external_var":false}]},{"html_id":"interro/Interro/QueryBuilder/ResultSetIterator","path":"Interro/QueryBuilder/ResultSetIterator.html","kind":"class","full_name":"Interro::QueryBuilder::ResultSetIterator(T)","name":"ResultSetIterator","abstract":false,"superclass":{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"interro/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"interro/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_builder.cr","line_number":780,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L780"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"namespace":{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder"},"constructors":[{"html_id":"new(db:DB::Database|DB::Connection,query:String,args:Array(U))forallU-class-method","name":"new","abstract":false,"args":[{"name":"db","external_name":"db","restriction":"DB::Database | DB::Connection"},{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(U)"}],"args_string":"(db : DB::Database | DB::Connection, query : String, args : Array(U)) forall U","args_html":"(db : DB::Database | DB::Connection, query : String, args : Array(U)) forall U","location":{"filename":"src/query_builder.cr","line_number":785,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L785"},"def":{"name":"new","args":[{"name":"db","external_name":"db","restriction":"DB::Database | DB::Connection"},{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(U)"}],"visibility":"Public","body":"_ = ResultSetIterator(T).allocate\n_.initialize(db, query, args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"finalize-instance-method","name":"finalize","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":806,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L806"},"def":{"name":"finalize","visibility":"Public","body":"@result_set.close"},"external_var":false},{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":789,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L789"},"def":{"name":"next","visibility":"Public","body":"if @result_set.move_next\n  {% if T < Tuple %}\n            {\n              {% for type in T.type_vars %}\n                @result_set.read({{ type }}),\n              {% end %}\n            }\n          {% else %}\n            T.new(@result_set)\n          {% end %}\nelse\n  @result_set.close\n  stop\nend"},"external_var":false}]}]},{"html_id":"interro/Interro/QueryExpression","path":"Interro/QueryExpression.html","kind":"struct","full_name":"Interro::QueryExpression","name":"QueryExpression","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_expression.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L4"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(lhs,comparator,rhs,values:Array(Any))-class-method","name":"new","abstract":false,"args":[{"name":"lhs","external_name":"lhs","restriction":""},{"name":"comparator","external_name":"comparator","restriction":""},{"name":"rhs","external_name":"rhs","restriction":""},{"name":"values","external_name":"values","restriction":"Array(Any)"}],"args_string":"(lhs, comparator, rhs, values : Array(Any))","args_html":"(lhs, comparator, rhs, values : Array(<a href=\"../Interro/Any.html\">Any</a>))","location":{"filename":"src/query_expression.cr","line_number":8,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L8"},"def":{"name":"new","args":[{"name":"lhs","external_name":"lhs","restriction":""},{"name":"comparator","external_name":"comparator","restriction":""},{"name":"rhs","external_name":"rhs","restriction":""},{"name":"values","external_name":"values","restriction":"Array(Any)"}],"visibility":"Public","body":"new(\"#{lhs} #{comparator} #{rhs}\", values)"},"external_var":false},{"html_id":"new(expression:String,values:Array(Interro::Any))-class-method","name":"new","abstract":false,"args":[{"name":"expression","external_name":"expression","restriction":"::String"},{"name":"values","external_name":"values","restriction":"::Array(::Interro::Any)"}],"args_string":"(expression : String, values : Array(Interro::Any))","args_html":"(expression : String, values : Array(<a href=\"../Interro/Any.html\">Interro::Any</a>))","location":{"filename":"src/query_expression.cr","line_number":12,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L12"},"def":{"name":"new","args":[{"name":"expression","external_name":"expression","restriction":"::String"},{"name":"values","external_name":"values","restriction":"::Array(::Interro::Any)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(expression, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"&(other:self):self-instance-method","name":"&","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/query_expression.cr","line_number":15,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L15"},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"values = @values + other.values\nself.class.new(\"(#{to_sql})\", \"AND\", \"(#{other.to_sql})\", values)\n"},"external_var":false},{"html_id":"|(other:self):self-instance-method","name":"|","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self) : self","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/query_expression.cr","line_number":20,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L20"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"self"}],"return_type":"self","visibility":"Public","body":"values = @values + other.values\nself.class.new(\"(#{to_sql})\", \"OR\", \"(#{other.to_sql})\", values)\n"},"external_var":false},{"html_id":"expression:String-instance-method","name":"expression","abstract":false,"location":{"filename":"src/query_expression.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L5"},"def":{"name":"expression","return_type":"String","visibility":"Public","body":"@expression"},"external_var":false},{"html_id":"to_sql(io)-instance-method","name":"to_sql","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/query_expression.cr","line_number":25,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L25"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"io << expression"},"external_var":false},{"html_id":"to_sql-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/query_expression.cr","line_number":29,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L29"},"def":{"name":"to_sql","visibility":"Public","body":"expression"},"external_var":false},{"html_id":"values:Array(Any)-instance-method","name":"values","abstract":false,"location":{"filename":"src/query_expression.cr","line_number":6,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_expression.cr#L6"},"def":{"name":"values","return_type":"Array(Any)","visibility":"Public","body":"@values"},"external_var":false}]},{"html_id":"interro/Interro/QueryRecord","path":"Interro/QueryRecord.html","kind":"struct","full_name":"Interro::QueryRecord","name":"QueryRecord","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_record.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_record.cr#L4"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(relation:String,&block:->Int32)-class-method","name":"new","abstract":false,"args":[{"name":"relation","external_name":"relation","restriction":"String"}],"args_string":"(relation : String, &block :  -> Int32)","args_html":"(relation : String, &block :  -> Int32)","location":{"filename":"src/query_record.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_record.cr#L5"},"def":{"name":"new","args":[{"name":"relation","external_name":"relation","restriction":"String"}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"(-> Int32)"},"visibility":"Public","body":"_ = allocate\n_.initialize(relation, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/query_record.cr","line_number":8,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_record.cr#L8"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      QueryValue.new(\"#{@relation}.\n{{ call.id }}\n\", @block.call)\n    \n"}}]},{"html_id":"interro/Interro/QueryValue","path":"Interro/QueryValue.html","kind":"struct","full_name":"Interro::QueryValue","name":"QueryValue","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_value.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L5"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(value:String,index:Int32)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"::String"},{"name":"index","external_name":"index","restriction":"::Int32"}],"args_string":"(value : String, index : Int32)","args_html":"(value : String, index : Int32)","location":{"filename":"src/query_value.cr","line_number":9,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L9"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"::String"},{"name":"index","external_name":"index","restriction":"::Int32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value, index)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"!=(other:Nil)-instance-method","name":"!=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil)","args_html":"(other : Nil)","location":{"filename":"src/query_value.cr","line_number":40,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L40"},"def":{"name":"!=","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"visibility":"Public","body":"QueryExpression.new(value, \"IS NOT\", \"NULL\", [] of Any)"},"external_var":false},{"html_id":"!=(other:Value)-instance-method","name":"!=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":36,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L36"},"def":{"name":"!=","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"!=\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"&(other:Value)-instance-method","name":"&","doc":"Bitwise operator","summary":"<p>Bitwise operator</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":60,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L60"},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"&\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"<(other:Value)-instance-method","name":"<","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":28,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L28"},"def":{"name":"<","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"<\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"<=(other:Value)-instance-method","name":"<=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":20,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L20"},"def":{"name":"<=","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"<=\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"==(other:Nil)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil)","args_html":"(other : Nil)","location":{"filename":"src/query_value.cr","line_number":16,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L16"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"visibility":"Public","body":"QueryExpression.new(value, \"IS\", \"NULL\", [] of Any)"},"external_var":false},{"html_id":"==(other:Value)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":12,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L12"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"=\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":">(other:Value)-instance-method","name":">","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":32,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L32"},"def":{"name":">","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \">\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":">=(other:Value)-instance-method","name":">=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":24,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L24"},"def":{"name":">=","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \">=\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"^(other:Value)-instance-method","name":"^","doc":"Bitwise operator","summary":"<p>Bitwise operator</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":60,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L60"},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"^\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"|(other:Value)-instance-method","name":"|","doc":"Bitwise operator","summary":"<p>Bitwise operator</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Value"}],"args_string":"(other : Value)","args_html":"(other : <a href=\"../Interro/Value.html\">Value</a>)","location":{"filename":"src/query_value.cr","line_number":60,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L60"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"Value"}],"visibility":"Public","body":"QueryExpression.new(value, \"|\", \"$#{index}\", [Any.new(other)])"},"external_var":false},{"html_id":"in?(array:Enumerable(Value))-instance-method","name":"in?","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Enumerable(Value)"}],"args_string":"(array : Enumerable(Value))","args_html":"(array : Enumerable(<a href=\"../Interro/Value.html\">Value</a>))","location":{"filename":"src/query_value.cr","line_number":44,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L44"},"def":{"name":"in?","args":[{"name":"array","external_name":"array","restriction":"Enumerable(Value)"}],"visibility":"Public","body":"in?(array.map do |value|\n  Any.new(value)\nend)"},"external_var":false},{"html_id":"in?(array:Enumerable(Any))-instance-method","name":"in?","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Enumerable(Any)"}],"args_string":"(array : Enumerable(Any))","args_html":"(array : Enumerable(<a href=\"../Interro/Any.html\">Any</a>))","location":{"filename":"src/query_value.cr","line_number":48,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L48"},"def":{"name":"in?","args":[{"name":"array","external_name":"array","restriction":"Enumerable(Any)"}],"visibility":"Public","body":"QueryExpression.new(value, \"=\", \"ANY($#{index})\", [Any.new(array)])"},"external_var":false},{"html_id":"index:Int32-instance-method","name":"index","abstract":false,"location":{"filename":"src/query_value.cr","line_number":7,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L7"},"def":{"name":"index","return_type":"Int32","visibility":"Public","body":"@index"},"external_var":false},{"html_id":"not_in?(array:Enumerable(Value))-instance-method","name":"not_in?","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Enumerable(Value)"}],"args_string":"(array : Enumerable(Value))","args_html":"(array : Enumerable(<a href=\"../Interro/Value.html\">Value</a>))","location":{"filename":"src/query_value.cr","line_number":52,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L52"},"def":{"name":"not_in?","args":[{"name":"array","external_name":"array","restriction":"Enumerable(Value)"}],"visibility":"Public","body":"not_in?(array.map do |value|\n  Any.new(value)\nend)"},"external_var":false},{"html_id":"not_in?(array:Enumerable(Any))-instance-method","name":"not_in?","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Enumerable(Any)"}],"args_string":"(array : Enumerable(Any))","args_html":"(array : Enumerable(<a href=\"../Interro/Any.html\">Any</a>))","location":{"filename":"src/query_value.cr","line_number":56,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L56"},"def":{"name":"not_in?","args":[{"name":"array","external_name":"array","restriction":"Enumerable(Any)"}],"visibility":"Public","body":"QueryExpression.new(value, \"!=\", \"ALL($#{index})\", [Any.new(array)])"},"external_var":false},{"html_id":"value:String-instance-method","name":"value","abstract":false,"location":{"filename":"src/query_value.cr","line_number":6,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_value.cr#L6"},"def":{"name":"value","return_type":"String","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"interro/Interro/UnexpectedEmptyResultSet","path":"Interro/UnexpectedEmptyResultSet.html","kind":"class","full_name":"Interro::UnexpectedEmptyResultSet","name":"UnexpectedEmptyResultSet","abstract":false,"superclass":{"html_id":"interro/Interro/Error","kind":"class","full_name":"Interro::Error","name":"Error"},"ancestors":[{"html_id":"interro/Interro/Error","kind":"class","full_name":"Interro::Error","name":"Error"},{"html_id":"interro/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"interro/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":18,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L18"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}},{"html_id":"interro/Interro/Update","path":"Interro/Update.html","kind":"struct","full_name":"Interro::Update(T)","name":"Update","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Interro/ConflictHandler/Action","kind":"module","full_name":"Interro::ConflictHandler::Action","name":"Action"},{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/interro.cr","line_number":93,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L93"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"interro/Interro/ConflictHandler/Action","kind":"module","full_name":"Interro::ConflictHandler::Action","name":"Action"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"constructors":[{"html_id":"new(setparams:T)-class-method","name":"new","abstract":false,"args":[{"name":"params","external_name":"set","restriction":"T"}],"args_string":"(set params : T)","args_html":"(set params : T)","location":{"filename":"src/interro.cr","line_number":98,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L98"},"def":{"name":"new","args":[{"name":"params","external_name":"set","restriction":"T"}],"visibility":"Public","body":"_ = Update(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"params:T-instance-method","name":"params","abstract":false,"location":{"filename":"src/interro.cr","line_number":96,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L96"},"def":{"name":"params","return_type":"T","visibility":"Public","body":"@params"},"external_var":false},{"html_id":"to_sql(io,start_atinitial_index):Nil-instance-method","name":"to_sql","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":""}],"args_string":"(io, start_at initial_index) : Nil","args_html":"(io, start_at initial_index) : Nil","location":{"filename":"src/interro.cr","line_number":101,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/interro.cr#L101"},"def":{"name":"to_sql","args":[{"name":"io","external_name":"io","restriction":""},{"name":"initial_index","external_name":"start_at","restriction":""}],"return_type":"Nil","visibility":"Public","body":"io << \"UPDATE SET \"\nparams.each_with_index(1) do |key, _, index|\n  ((io << key.to_s) << \" = $\") << (initial_index + index)\n  if index < params.size\n    io << \", \"\n  end\nend\n"},"external_var":false}]},{"html_id":"interro/Interro/Validations","path":"Interro/Validations.html","kind":"module","full_name":"Interro::Validations","name":"Validations","abstract":false,"locations":[{"filename":"src/validations.cr","line_number":23,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L23"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"interro/Interro/QueryBuilder","kind":"struct","full_name":"Interro::QueryBuilder(T)","name":"QueryBuilder"}],"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"},"doc":"Validate inputs to your queries before saving the values to the database.\nSince `QueryBuilder` includes `Validations`, it allows you to reference\n`Result` and `Failure` by their shorthand names.\n\n```\nstruct UserQuery < Interro::QueryBuilder(User)\n  def create(*, name : String, email : String, team : Team, role : User::Role)\n    Result(User).new\n      .validate_presence(name: name, email: email)\n      .validate_uniqueness(\"email\") { where(email: email).any? }\n      .valid do\n        insert(\n          name: name,\n          email: email,\n          team_id: team.id,\n          role: role.value,\n        )\n      end\n  end\nend\n```","summary":"<p>Validate inputs to your queries before saving the values to the database.</p>","types":[{"html_id":"interro/Interro/Validations/Error","path":"Interro/Validations/Error.html","kind":"struct","full_name":"Interro::Validations::Error","name":"Error","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/validations.cr","line_number":257,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L257"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},"doc":"Represents a validation error. Can be rendered directly to a template.","summary":"<p>Represents a validation error.</p>","constructors":[{"html_id":"new(attribute:String,message:String)-class-method","name":"new","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(attribute : String, message : String)","args_html":"(attribute : String, message : String)","location":{"filename":"src/validations.cr","line_number":257,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L257"},"def":{"name":"new","args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(attribute, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(value:String)-instance-method","name":"==","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src/validations.cr","line_number":266,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L266"},"def":{"name":"==","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"to_s == value"},"external_var":false},{"html_id":"attribute:String-instance-method","name":"attribute","abstract":false,"def":{"name":"attribute","return_type":"String","visibility":"Public","body":"@attribute"},"external_var":false},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/validations.cr","line_number":257,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L257"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@attribute.clone, @message.clone)"},"external_var":false},{"html_id":"copy_with(attribute_attribute=@attribute,message_message=@message)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_attribute","default_value":"@attribute","external_name":"attribute","restriction":""},{"name":"_message","default_value":"@message","external_name":"message","restriction":""}],"args_string":"(attribute _attribute = @attribute, message _message = @message)","args_html":"(attribute _attribute = @attribute, message _message = @message)","location":{"filename":"src/validations.cr","line_number":257,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L257"},"def":{"name":"copy_with","args":[{"name":"_attribute","default_value":"@attribute","external_name":"attribute","restriction":""},{"name":"_message","default_value":"@message","external_name":"message","restriction":""}],"visibility":"Public","body":"self.class.new(_attribute, _message)"},"external_var":false},{"html_id":"message:String-instance-method","name":"message","abstract":false,"def":{"name":"message","return_type":"String","visibility":"Public","body":"@message"},"external_var":false},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/validations.cr","line_number":258,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L258"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"if attribute.empty?\nelse\n  (io << attribute) << ' '\nend\n\nio << message\n"},"external_var":false}]},{"html_id":"interro/Interro/Validations/Failure","path":"Interro/Validations/Failure.html","kind":"struct","full_name":"Interro::Validations::Failure","name":"Failure","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/validations.cr","line_number":272,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L272"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},"doc":"Returned when one or more validations did not pass and contains all of the validation errors.","summary":"<p>Returned when one or more validations did not pass and contains all of the validation errors.</p>","constructors":[{"html_id":"new(errors:Array(Error))-class-method","name":"new","abstract":false,"args":[{"name":"errors","external_name":"errors","restriction":"Array(Error)"}],"args_string":"(errors : Array(Error))","args_html":"(errors : Array(<a href=\"../../Interro/Validations/Error.html\">Error</a>))","location":{"filename":"src/validations.cr","line_number":272,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L272"},"def":{"name":"new","args":[{"name":"errors","external_name":"errors","restriction":"Array(Error)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(error_messages:Array(String)):Failure-class-method","name":"new","abstract":false,"args":[{"name":"error_messages","external_name":"error_messages","restriction":"Array(String)"}],"args_string":"(error_messages : Array(String)) : Failure","args_html":"(error_messages : Array(String)) : <a href=\"../../Interro/Validations/Failure.html\">Failure</a>","location":{"filename":"src/validations.cr","line_number":273,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L273"},"def":{"name":"new","args":[{"name":"error_messages","external_name":"error_messages","restriction":"Array(String)"}],"return_type":"Failure","visibility":"Public","body":"new(error_messages.map do |message|\n  Error.new(\"\", message)\nend)"},"external_var":false}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/validations.cr","line_number":272,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L272"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@errors.clone)"},"external_var":false},{"html_id":"copy_with(errors_errors=@errors)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_errors","default_value":"@errors","external_name":"errors","restriction":""}],"args_string":"(errors _errors = @errors)","args_html":"(errors _errors = @errors)","location":{"filename":"src/validations.cr","line_number":272,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L272"},"def":{"name":"copy_with","args":[{"name":"_errors","default_value":"@errors","external_name":"errors","restriction":""}],"visibility":"Public","body":"self.class.new(_errors)"},"external_var":false},{"html_id":"errors:Array(Error)-instance-method","name":"errors","abstract":false,"def":{"name":"errors","return_type":"Array(Error)","visibility":"Public","body":"@errors"},"external_var":false}]},{"html_id":"interro/Interro/Validations/Result","path":"Interro/Validations/Result.html","kind":"struct","full_name":"Interro::Validations::Result(T)","name":"Result","abstract":false,"superclass":{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"interro/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/validations.cr","line_number":50,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L50"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"interro/Interro/Validations","kind":"module","full_name":"Interro::Validations","name":"Validations"},"doc":"The entrypoint into validating your objects is to instantiate a\n`Result(T)`, which you then call validation methods on. When you're\nfinished calling validations, you call `valid` with a block. That block\nwill execute if your values pass all validations, returning the value\nin the block (which must be the `T` type of the `Result`), or an\n`Interro::Validations::Failure` object, which contains the validation\nerrors for the given inputs.\n\n```\nstruct UserQuery < Interro::QueryBuilder(User)\n  def create(*, name : String, email : String, team : Team, role : User::Role)\n    Result(User).new\n      .validate_presence(name: name, email: email)\n      .validate_uniqueness(\"email\") { where(email: email).any? }\n      .validate_format(/\\w@\\w/, email: email, failure_message: \"must be a valid email address\")\n      .valid do\n        insert(\n          name: name,\n          email: email,\n          team_id: team.id,\n          role: role.value,\n        )\n      end\n  end\nend\n```","summary":"<p>The entrypoint into validating your objects is to instantiate a <code><a href=\"../../Interro/Validations/Result.html\">Result</a>(T)</code>, which you then call validation methods on.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/validations.cr","line_number":50,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L50"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"|(other:Result)-instance-method","name":"|","doc":"Combine the errors of two different `Result` instances. The `T` types do not have to match.","summary":"<p>Combine the errors of two different <code><a href=\"../../Interro/Validations/Result.html\">Result</a></code> instances.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Result"}],"args_string":"(other : Result)","args_html":"(other : <a href=\"../../Interro/Validations/Result.html\">Result</a>)","location":{"filename":"src/validations.cr","line_number":239,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L239"},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":"Result"}],"visibility":"Public","body":"result = self.class.new\nresult.errors = errors | other.errors\nresult\n"},"external_var":false},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/validations.cr","line_number":50,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L50"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false},{"html_id":"valid(&):T|Failure-instance-method","name":"valid","doc":"Execute the block given if all validations have passed, otherwise return\na `Failure` containing all of the validation errors.","summary":"<p>Execute the block given if all validations have passed, otherwise return a <code><a href=\"../../Interro/Validations/Failure.html\">Failure</a></code> containing all of the validation errors.</p>","abstract":false,"location":{"filename":"src/validations.cr","line_number":247,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L247"},"def":{"name":"valid","yields":0,"block_arity":0,"return_type":"T | Failure","visibility":"Public","body":"if errors.empty?\n  yield\nelse\n  Failure.new(errors.sort_by(&.attribute))\nend"},"external_var":false},{"html_id":"validate(attribute:String,message:String,&)-instance-method","name":"validate","doc":"Validate a block returns truthy, failing validation with the given `message` if it returns falsy.\n\n```\nstruct Post < Interro::QueryBuilder(T)\n  table \"posts\"\n\n  def create(*, title : String, body : String, by author : User, published : Bool, tags : Array(String)? = nil) : Post | Failure\n    Result(Post).new\n      .validate(\"tags\", \"must be populated for published posts\") do\n        !published || tags.try(&.any?)\n      end\n      .valid do\n        published_at = Time.utc if published\n        insert(\n          title: title,\n          body: body,\n          author_id: author.id,\n          published_at: published_at,\n          tags: tags,\n        )\n      end\n  end\nend\n```","summary":"<p>Validate a block returns truthy, failing validation with the given <code>message</code> if it returns falsy.</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(attribute : String, message : String, &)","args_html":"(attribute : String, message : String, &)","location":{"filename":"src/validations.cr","line_number":230,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L230"},"def":{"name":"validate","args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"yields":0,"block_arity":0,"visibility":"Public","body":"if yield\nelse\n  errors << (Error.new(attribute, message))\nend\n\nself\n"},"external_var":false},{"html_id":"validate(message:String,&)-instance-method","name":"validate","doc":"Validate a block returns truthy, failing validation with the given `message` if it returns falsy.\n\n```\nstruct Post < Interro::QueryBuilder(T)\n  table \"posts\"\n\n  def create(*, title : String, body : String, by author : User, published : Bool, tags : Array(String)? = nil) : Post | Failure\n    Result(Post).new\n      .validate(\"published posts must have tags\") do\n        !published || tags.try(&.any?)\n      end\n      .valid do\n        published_at = Time.utc if published\n        insert(\n          title: title,\n          body: body,\n          author_id: author.id,\n          published_at: published_at,\n          tags: tags,\n        )\n      end\n  end\nend\n```","summary":"<p>Validate a block returns truthy, failing validation with the given <code>message</code> if it returns falsy.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String, &)","args_html":"(message : String, &)","location":{"filename":"src/validations.cr","line_number":200,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L200"},"def":{"name":"validate","args":[{"name":"message","external_name":"message","restriction":"String"}],"yields":0,"block_arity":0,"visibility":"Public","body":"validate(\"\", message) do\n  yield\nend"},"external_var":false},{"html_id":"validate_format(name,value:String,format:Regex,*,failure_message:String=\"isinthewrongformat\"):self-instance-method","name":"validate_format","doc":"Validate that `value` matches the expected format in the `Regex`, using\nthe attribute name specified in `name` and a default `failure_message`.\n\n```\nResult(User).new\n  .validate_format(\"email\", email, /\\w@\\w/, failure_message: \"must be a valid email address\")\n```","summary":"<p>Validate that <code>value</code> matches the expected format in the <code>Regex</code>, using the attribute name specified in <code>name</code> and a default <code>failure_message</code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"value","external_name":"value","restriction":"String"},{"name":"format","external_name":"format","restriction":"Regex"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","default_value":"\"is in the wrong format\"","external_name":"failure_message","restriction":"String"}],"args_string":"(name, value : String, format : Regex, *, failure_message : String = \"is in the wrong format\") : self","args_html":"(name, value : String, format : Regex, *, failure_message : String = <span class=\"s\">&quot;is in the wrong format&quot;</span>) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":102,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L102"},"def":{"name":"validate_format","args":[{"name":"name","external_name":"name","restriction":""},{"name":"value","external_name":"value","restriction":"String"},{"name":"format","external_name":"format","restriction":"Regex"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","default_value":"\"is in the wrong format\"","external_name":"failure_message","restriction":"String"}],"splat_index":3,"return_type":"self","visibility":"Public","body":"validate(name.to_s, failure_message) do\n  value =~ format\nend"},"external_var":false},{"html_id":"validate_format(value:String,format:Regex,*,failure_message:String):self-instance-method","name":"validate_format","doc":"Validate that `value` matches the expected format in the `Regex`. This\nmethod does not infer a name, so a custom `failure_message` must be\nprovided.\n\n```\nResult(User).new\n  .validate_format(email, /\\w@\\w/, failure_message: \"Email must be a valid email address (user@domain.tld)\")\n```","summary":"<p>Validate that <code>value</code> matches the expected format in the <code>Regex</code>.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"},{"name":"format","external_name":"format","restriction":"Regex"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","external_name":"failure_message","restriction":"String"}],"args_string":"(value : String, format : Regex, *, failure_message : String) : self","args_html":"(value : String, format : Regex, *, failure_message : String) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":91,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L91"},"def":{"name":"validate_format","args":[{"name":"value","external_name":"value","restriction":"String"},{"name":"format","external_name":"format","restriction":"Regex"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","external_name":"failure_message","restriction":"String"}],"splat_index":2,"return_type":"self","visibility":"Public","body":"validate_format(nil, value, format, failure_message: failure_message)"},"external_var":false},{"html_id":"validate_format(format:Regex,**attributes):self-instance-method","name":"validate_format","doc":"Validate that all of the attributes match the expected format in the\n`Regex`.\n\n```\nResult(User).new\n  .validate_format(/\\w@\\w/, email: email)\n```","summary":"<p>Validate that all of the attributes match the expected format in the <code>Regex</code>.</p>","abstract":false,"args":[{"name":"format","external_name":"format","restriction":"Regex"}],"args_string":"(format : Regex, **attributes) : self","args_html":"(format : Regex, **attributes) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":75,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L75"},"def":{"name":"validate_format","args":[{"name":"format","external_name":"format","restriction":"Regex"}],"double_splat":{"name":"attributes","external_name":"attributes","restriction":""},"return_type":"self","visibility":"Public","body":"attributes.each do |attr, value|\n  validate_format(attr.to_s, value, format, failure_message: \"is in the wrong format\")\nend\n\nself\n"},"external_var":false},{"html_id":"validate_presence(**values):self-instance-method","name":"validate_presence","doc":"Validate whether all of the `values` are present by calling `.presence`\non them.\n\n```\nResult(Post).new\n  .validate_presence(title: title, body: body)\n```","summary":"<p>Validate whether all of the <code>values</code> are present by calling <code>.presence</code> on them.</p>","abstract":false,"location":{"filename":"src/validations.cr","line_number":60,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L60"},"def":{"name":"validate_presence","double_splat":{"name":"values","external_name":"values","restriction":""},"return_type":"self","visibility":"Public","body":"values.each do |name, value|\n  validate(name.to_s, \"must not be blank\") do\n    value.presence\n  end\nend\n\nself\n"},"external_var":false},{"html_id":"validate_size(name:String,value,size:Range,unit:String,*,failure_message=default_validate_size_failure_message(size,unit)):self-instance-method","name":"validate_size","doc":"Validate that `value` is of the expected `size` range. Value can be any object that responds to `#size`.\n\n```\nResult(User).new\n  .validate_size(\"username\", username, 2..64, \"characters\")\n```","summary":"<p>Validate that <code>value</code> is of the expected <code>size</code> range.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"size","external_name":"size","restriction":"Range"},{"name":"unit","external_name":"unit","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","default_value":"default_validate_size_failure_message(size, unit)","external_name":"failure_message","restriction":""}],"args_string":"(name : String, value, size : Range, unit : String, *, failure_message = default_validate_size_failure_message(size, unit)) : self","args_html":"(name : String, value, size : Range, unit : String, *, failure_message = default_validate_size_failure_message(size, unit)) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":114,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L114"},"def":{"name":"validate_size","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"size","external_name":"size","restriction":"Range"},{"name":"unit","external_name":"unit","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"failure_message","default_value":"default_validate_size_failure_message(size, unit)","external_name":"failure_message","restriction":""}],"splat_index":4,"return_type":"self","visibility":"Public","body":"validate(name, failure_message) do\n  size.includes?(value.size)\nend"},"external_var":false},{"html_id":"validate_uniqueness(attribute,&):self-instance-method","name":"validate_uniqueness","doc":"Validate that the given attribute is unique by executing a block that\nreturns truthy if any other objects exist with that attribute.\n\n```\nResult(User).new\n  .validate_uniqueness(\"email\") { where(email: email).any? }\n```","summary":"<p>Validate that the given attribute is unique by executing a block that returns truthy if any other objects exist with that attribute.</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":""}],"args_string":"(attribute, &) : self","args_html":"(attribute, &) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":157,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L157"},"def":{"name":"validate_uniqueness","args":[{"name":"attribute","external_name":"attribute","restriction":""}],"yields":0,"block_arity":0,"return_type":"self","visibility":"Public","body":"validate(attribute, \"has already been taken\") do\n  !(yield)\nend"},"external_var":false},{"html_id":"validate_uniqueness(*,message:String,&):self-instance-method","name":"validate_uniqueness","doc":"Validate that the given attribute is unique by executing a block that\nreturns truthy if any other objects exist with that attribute.\n\n```\nResult(User).new\n  .validate_uniqueness(message: \"That email has already been taken\") { where(email: email).any? }\n```","summary":"<p>Validate that the given attribute is unique by executing a block that returns truthy if any other objects exist with that attribute.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(*, message : String, &) : self","args_html":"(*, message : String, &) : <span class=\"k\">self</span>","location":{"filename":"src/validations.cr","line_number":170,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/validations.cr#L170"},"def":{"name":"validate_uniqueness","args":[{"name":"","external_name":"","restriction":""},{"name":"message","external_name":"message","restriction":"String"}],"splat_index":0,"yields":0,"block_arity":0,"return_type":"self","visibility":"Public","body":"validate(\"\", message) do\n  !(yield)\nend"},"external_var":false}]}]},{"html_id":"interro/Interro/Value","path":"Interro/Value.html","kind":"alias","full_name":"Interro::Value","name":"Value","abstract":false,"locations":[{"filename":"src/types.cr","line_number":4,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L4"}],"repository_name":"interro","program":false,"enum":false,"alias":true,"aliased":"(Array(Interro::Any) | Bool | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | UUID | Nil)","aliased_html":"Array(<a href=\"../Interro/Any.html\">Interro::Any</a>) | Bool | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | UUID | Nil","const":false,"namespace":{"html_id":"interro/Interro","kind":"module","full_name":"Interro","name":"Interro"}}]},{"html_id":"interro/NamedTuple","path":"NamedTuple.html","kind":"struct","full_name":"NamedTuple(**T)","name":"NamedTuple","abstract":false,"superclass":{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"interro/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"interro/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/query_builder.cr","line_number":863,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L863"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false,"doc":"A named tuple is a fixed-size, immutable, stack-allocated mapping\nof a fixed set of keys to values.\n\nYou can think of a `NamedTuple` as an immutable `Hash` whose keys (which\nare of type `Symbol`), and the types for each key, are known at compile time.\n\nA named tuple can be created with a named tuple literal:\n\n```\nlanguage = {name: \"Crystal\", year: 2011} # NamedTuple(name: String, year: Int32)\n\nlanguage[:name]  # => \"Crystal\"\nlanguage[:year]  # => 2011\nlanguage[:other] # compile time error\n```\n\nSee [`NamedTuple` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/named_tuple.html) in the language reference.\n\nThe compiler knows what types are in each key, so when indexing a named tuple\nwith a symbol or string literal the compiler will return the value for that\nkey and with the expected type, like in the above snippet. Indexing with a\nsymbol or string literal for which there's no key will give a compile-time\nerror.\n\nIndexing with a symbol or string that is only known at runtime will return\na value whose type is the union of all the types in the named tuple,\nand might raise `KeyError`.\n\nIndexing with `#[]?` does not make the return value nilable if the key is\nknown to exist:\n\n```\nlanguage = {name: \"Crystal\", year: 2011}\nlanguage[:name]?         # => \"Crystal\"\ntypeof(language[:name]?) # => String\n```\n\n`NamedTuple`'s own instance classes may also be indexed in a similar manner,\nreturning their value types instead:\n\n```\ntuple = NamedTuple(name: String, year: Int32)\ntuple[:name]   # => String\ntuple[\"year\"]  # => Int32\ntuple[:other]? # => nil\n```","summary":"<p>A named tuple is a fixed-size, immutable, stack-allocated mapping of a fixed set of keys to values.</p>","instance_methods":[{"html_id":"transform_values(&)-instance-method","name":"transform_values","abstract":false,"location":{"filename":"src/query_builder.cr","line_number":864,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/query_builder.cr#L864"},"def":{"name":"transform_values","yields":0,"block_arity":0,"visibility":"Public","body":"{% if true %}\n      {\n        {% for key, value in T %}\n          {{ key.stringify }}: yield(self[:{{ key.stringify }}]),\n        {% end %}\n      }\n    {% end %}"},"external_var":false}]},{"html_id":"interro/PQ","path":"PQ.html","kind":"module","full_name":"PQ","name":"PQ","abstract":false,"locations":[{"filename":"lib/pg/src/pq/connection.cr","line_number":11,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/connection.cr#L11"},{"filename":"lib/pg/src/pq/conninfo.cr","line_number":5,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/conninfo.cr#L5"},{"filename":"lib/pg/src/pq/error.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/error.cr#L1"},{"filename":"lib/pg/src/pq/field.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/field.cr#L1"},{"filename":"lib/pg/src/pq/frame.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/frame.cr#L3"},{"filename":"lib/pg/src/pq/notice.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/notice.cr#L3"},{"filename":"lib/pg/src/pq/param.cr","line_number":3,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/param.cr#L3"},{"filename":"lib/pg/src/pq/pgpass.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/pgpass.cr#L1"},{"filename":"lib/pg/src/pq/query.cr","line_number":1,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/lib/pg/src/pq/query.cr#L1"},{"filename":"src/types.cr","line_number":36,"url":"https://github.com/jgaskins/interro/blob/v0.3.3/src/types.cr#L36"}],"repository_name":"interro","program":false,"enum":false,"alias":false,"const":false}]}})